{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "b8285ecb",
   "metadata": {
    "papermill": {
     "duration": 0.011618,
     "end_time": "2025-04-07T15:21:11.365814",
     "exception": false,
     "start_time": "2025-04-07T15:21:11.354196",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    " <center>\n",
    "\n",
    "# **PA3:  SVM And Classification Using Random Forests**\n",
    "\n",
    "### **Total : 200 marks**\n",
    "\n",
    "</center>\n",
    "\n",
    "**Group Number:**\n",
    "\n",
    "Name: Baqir Hassan\n",
    "\n",
    "Roll Number: 27100340\n",
    "\n",
    "Name: Sameen Abid\n",
    "\n",
    "Roll Number:\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5ae7f8cd",
   "metadata": {
    "papermill": {
     "duration": 0.00973,
     "end_time": "2025-04-07T15:21:11.385976",
     "exception": false,
     "start_time": "2025-04-07T15:21:11.376246",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Instructions\n",
    "\n",
    "- Follow along with the notebook, filling out the necessary code where instructed.\n",
    "\n",
    "- <span style=\"color: red;\">Make sure to run all cells for credit.</span>\n",
    "\n",
    "- <span style=\"color: red;\">Do not remove any pre-written code (unless explicitly mentioned in the cell that you are allowed to do so).</span>\n",
    "\n",
    "- <span style=\"color: red;\">You must attempt all parts.</span>\n",
    "\n",
    "## Submission Guidelines\n",
    "\n",
    "You are to submit a zip file containing the following files:\n",
    "\n",
    "1. This juptyer notebook. `Group<group_number>_S<section_number>_PA3.ipynb`\n",
    "2. Python file of the juptyer notebook. `Group<group_number>_S<section_number>_PA3.py`\n",
    "\n",
    "For example if I am from S1 and my group number is 25, my files would be named `Group25_S1_PA3.ipynb` and `Group25_S1_PA3.py`\n",
    "\n",
    "IMPORTANT: **Do not zip the files.** Submit both the files seperately, without zipping them.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dfe795c3",
   "metadata": {
    "papermill": {
     "duration": 0.010038,
     "end_time": "2025-04-07T15:21:11.406218",
     "exception": false,
     "start_time": "2025-04-07T15:21:11.396180",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Part 1:IMPLEMENTING SVM FROM SCRATCH  (100 marks)\n",
    "\n",
    "You are <span style=\"color: red;\">not allowed</span> to use scikit-learn or any other machine learning toolkit for this part. You have to implement your own SVM classifier from scratch.\n",
    "\n",
    "### Importing Libraries\n",
    "\n",
    "All of the necessary libraries for this part have been imported for you below. You may not use any other library apart from standard Python librares.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "055139b4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:11.427666Z",
     "iopub.status.busy": "2025-04-07T15:21:11.427339Z",
     "iopub.status.idle": "2025-04-07T15:21:12.637909Z",
     "shell.execute_reply": "2025-04-07T15:21:12.637084Z"
    },
    "papermill": {
     "duration": 1.222894,
     "end_time": "2025-04-07T15:21:12.639501",
     "exception": false,
     "start_time": "2025-04-07T15:21:11.416607",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.datasets import make_moons\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import StandardScaler"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f197d06",
   "metadata": {
    "papermill": {
     "duration": 0.011152,
     "end_time": "2025-04-07T15:21:12.660707",
     "exception": false,
     "start_time": "2025-04-07T15:21:12.649555",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Task 1.1: VISUALISING THE DATA SET \n",
    "\n",
    "For this part of the assignment, you have already been provided with a linearly separable dataset.\n",
    "\n",
    "It has also been plotted for you.\n",
    "\n",
    "Carefully analyze it and use it in the next part."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "79d7d9e2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:12.683102Z",
     "iopub.status.busy": "2025-04-07T15:21:12.682623Z",
     "iopub.status.idle": "2025-04-07T15:21:12.955064Z",
     "shell.execute_reply": "2025-04-07T15:21:12.954071Z"
    },
    "papermill": {
     "duration": 0.285548,
     "end_time": "2025-04-07T15:21:12.956642",
     "exception": false,
     "start_time": "2025-04-07T15:21:12.671094",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.datasets import make_blobs\n",
    "\n",
    "X, y = make_blobs(n_samples=200, centers=2, random_state=42, cluster_std=1)\n",
    "\n",
    "y = np.where(y == 0, -1, 1)\n",
    "\n",
    "scaler = StandardScaler()\n",
    "X = scaler.fit_transform(X)\n",
    "\n",
    "plt.figure(figsize=(8,6))\n",
    "plt.scatter(X[:, 0], X[:, 1], c=y, cmap='bwr', edgecolors='k')\n",
    "plt.xlabel('Feature 1')\n",
    "plt.ylabel('Feature 2')\n",
    "plt.title('Linearly Separable Data')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "12dbb9a8",
   "metadata": {
    "papermill": {
     "duration": 0.010704,
     "end_time": "2025-04-07T15:21:12.979352",
     "exception": false,
     "start_time": "2025-04-07T15:21:12.968648",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "\"\"\"\n",
    "## Task 1.2: Implementing an SVM Classifier from Scratch   (40 marks)\n",
    "\n",
    "Now you will create your own **Support Vector Machine (SVM) classifier** by implementing the following functions:  \n",
    "\n",
    "---\n",
    "\n",
    "### **Step 1: Understanding SVM**\n",
    "- **Support Vector Machines (SVMs)** are supervised learning models used for binary classification.\n",
    "- The model finds a **hyperplane** that best separates two classes.\n",
    "- If the data is **not linearly separable**, a **kernel trick** is applied to project it into a higher-dimensional space.\n",
    "\n",
    "---\n",
    "\n",
    "### **Step 2: Implementing Key Functions**\n",
    "\n",
    "#### 1. `fit(self, X, y)`\n",
    "📌 **Objective:** Train the SVM model using a **gradient-based approach**.  \n",
    "\n",
    "💡 **Implementation Guide:**  \n",
    "- Initialize the **weight vector** (`w`) and **bias** (`b`) to zeros.  \n",
    "- Iterate over the dataset for `n_iters` times.  \n",
    "- For each sample, check if it violates the **margin condition**:  \n",
    "- **TODO:** Implement weight and bias updates in the `fit` function.\n",
    "\n",
    "---\n",
    "\n",
    "#### 2. `predict(self, X)`\n",
    "📌 **Objective:** Predict class labels for the given test dataset.\n",
    "\n",
    "💡 **Implementation Guide:**  \n",
    "- Compute the **decision function**:\n",
    "  \\[\n",
    "  f(x) = w.x + b\n",
    "  \\]\n",
    "- Assign a **label** based on the sign of `f(x)`:  \n",
    "  - If `f(x) > 0`, predict `+1`\n",
    "  - If `f(x) < 0`, predict `-1`\n",
    "- **TODO:** Implement the decision function using numpy operations.\n",
    "\n",
    "---\n",
    "\n",
    "#### 3. `evaluate(self, X, y)`\n",
    "📌 **Objective:** Evaluate the model on a test set and return accuracy.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f39c5277",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:13.002289Z",
     "iopub.status.busy": "2025-04-07T15:21:13.001936Z",
     "iopub.status.idle": "2025-04-07T15:21:13.014121Z",
     "shell.execute_reply": "2025-04-07T15:21:13.013288Z"
    },
    "papermill": {
     "duration": 0.025547,
     "end_time": "2025-04-07T15:21:13.015516",
     "exception": false,
     "start_time": "2025-04-07T15:21:12.989969",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class SVM:\n",
    "    def __init__(self, learning_rate=0.001, n_iters=1000, lp=0.01):\n",
    "        '''\n",
    "          Initializes the class with learning rate and number of iterations.\n",
    "        '''\n",
    "        self.lr = learning_rate\n",
    "        self.n_iters = n_iters\n",
    "        self.w = None\n",
    "        self.b = 0\n",
    "        self.lagrange = lp\n",
    "\n",
    "    def fit(self, X, y):\n",
    "        '''\n",
    "          Trains the SVM model using a simple gradient-based approach.\n",
    "\n",
    "          Steps:\n",
    "          1. Initialize the weight vector `w` and bias `b` to zeros.\n",
    "          2. Iterate over the dataset for the given number of iterations.\n",
    "          3. For each sample, check if it is misclassified:\n",
    "             - If misclassified, update `w` and `b` based on the learning rate.\n",
    "          \n",
    "          TODO: Implement the weight and bias updates based on the hinge loss condition.\n",
    "        '''\n",
    "        n_samples, n_features = X.shape\n",
    "        self.w = np.zeros(n_features)\n",
    "        self.b = 0\n",
    "\n",
    "        for nothing in range(self.n_iters):\n",
    "            for it, x_i in enumerate(X):\n",
    "                learn_cond = y[it] * (np.dot(x_i, self.w) - self.b) >= 1\n",
    "                if not learn_cond:\n",
    "                    self.w -= self.lr * (2 * self.lagrange * self.w - y[it] * x_i)\n",
    "                    self.b -= self.lr * y[it]\n",
    "                else:\n",
    "                    self.w -= self.lr * (2 * self.lagrange * self.w)\n",
    "\n",
    "    def predict(self, X):\n",
    "        '''\n",
    "          Predicts the labels for a given test dataset.\n",
    "\n",
    "          Steps:\n",
    "          1. Compute the decision function: `y_hat = sign(X @ w + b)`\n",
    "          2. Return the predicted labels.\n",
    "\n",
    "          TODO: Implement the decision function using numpy operations.\n",
    "        '''\n",
    "        y_pred_soft = np.dot(X, self.w) - self.b\n",
    "        return np.sign(y_pred_soft)\n",
    "\n",
    "    def evaluate(self, X, y):\n",
    "        '''\n",
    "          Evaluates the model on the test set and returns accuracy.\n",
    "\n",
    "          Steps:\n",
    "          1. Use the `predict` function to get predictions.\n",
    "          2. Compare predictions with actual labels.\n",
    "          3. Compute accuracy as the fraction of correct predictions.\n",
    "\n",
    "          TODO: Implement the accuracy calculation.\n",
    "        '''\n",
    "        y_hat = self.predict(X)\n",
    "        accuracy = self.my_accuracy(y, y_hat)\n",
    "        return accuracy\n",
    "\n",
    "# helper\n",
    "    def my_accuracy(self, y_true, y_pred):\n",
    "            correct = np.sum(y_true == y_pred)\n",
    "            total = len(y_true)\n",
    "            return correct / total if total > 0 else 0"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c7064fad",
   "metadata": {
    "papermill": {
     "duration": 0.01065,
     "end_time": "2025-04-07T15:21:13.036834",
     "exception": false,
     "start_time": "2025-04-07T15:21:13.026184",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Task 1.3: Evaluation\n",
    "**Run the cell below to observe your evaluation.**\n",
    "\n",
    "**Hint:This is a perfectly lineraly seperable data**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "5e807882",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:13.059657Z",
     "iopub.status.busy": "2025-04-07T15:21:13.059287Z",
     "iopub.status.idle": "2025-04-07T15:21:13.932594Z",
     "shell.execute_reply": "2025-04-07T15:21:13.931753Z"
    },
    "papermill": {
     "duration": 0.886292,
     "end_time": "2025-04-07T15:21:13.934068",
     "exception": false,
     "start_time": "2025-04-07T15:21:13.047776",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 1.0\n"
     ]
    }
   ],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=123)\n",
    "svm = SVM(learning_rate=0.001, n_iters=1000, lp=0.01)\n",
    "svm.fit(X_train, y_train)\n",
    "accuracy = svm.evaluate(X_test, y_test)\n",
    "print(\"Accuracy:\", accuracy)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5634b9c1",
   "metadata": {
    "papermill": {
     "duration": 0.012066,
     "end_time": "2025-04-07T15:21:13.957667",
     "exception": false,
     "start_time": "2025-04-07T15:21:13.945601",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Task 1.4: Plot the decision Boundary\n",
    "**TODO: define the  plot_decision_boundary(svm, X, y) function\n",
    " below to observe the descision boundary**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e9de5856",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:13.980330Z",
     "iopub.status.busy": "2025-04-07T15:21:13.980070Z",
     "iopub.status.idle": "2025-04-07T15:21:14.227221Z",
     "shell.execute_reply": "2025-04-07T15:21:14.226442Z"
    },
    "papermill": {
     "duration": 0.260446,
     "end_time": "2025-04-07T15:21:14.228881",
     "exception": false,
     "start_time": "2025-04-07T15:21:13.968435",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def plot_decision_boundary(svm, X, y):\n",
    "    x1_min = min(X[:, 0]) - 1\n",
    "    x1_max = max(X[:, 0]) + 1\n",
    "    \n",
    "\n",
    "    w1 = svm.w[0] \n",
    "    w2 = svm.w[1] \n",
    "    b = svm.b  \n",
    "    \n",
    "    x1_points = [x1_min, x1_max]\n",
    "    x2_points = []\n",
    "    x2_margin_plus = []\n",
    "    x2_margin_minus = []\n",
    "    \n",
    "    for x1 in x1_points:\n",
    "        if w2 != 0:  \n",
    "            x2 = (b - w1 * x1) / w2\n",
    "            x2_points.append(x2)\n",
    "            x2_plus = (b + 1 - w1 * x1) / w2\n",
    "            x2_margin_plus.append(x2_plus)\n",
    "            x2_minus = (b - 1 - w1 * x1) / w2\n",
    "            x2_margin_minus.append(x2_minus)\n",
    "        else:\n",
    "            x2_margin_plus.append(0)\n",
    "            x2_margin_minus.append(0)\n",
    "    \n",
    "    plt.figure(figsize=(8, 6))\n",
    "    \n",
    "    plt.plot(x1_points, x2_points, 'k-', label='Decision Boundary')\n",
    "    plt.plot(x1_points, x2_margin_plus, 'r--', label='Margin +1')\n",
    "    plt.plot(x1_points, x2_margin_minus, 'b--', label='Margin -1')\n",
    "    x1_class1, x2_class1 = [], []\n",
    "    x1_class2, x2_class2 = [], []\n",
    "    for i in range(len(X)):\n",
    "        if y[i] == 1:\n",
    "            x1_class1.append(X[i, 0])\n",
    "            x2_class1.append(X[i, 1])\n",
    "        else:\n",
    "            x1_class2.append(X[i, 0])\n",
    "            x2_class2.append(X[i, 1])\n",
    "    \n",
    "    plt.scatter(x1_class1, x2_class1, c='red', edgecolors='k', label='Class 1')\n",
    "    plt.scatter(x1_class2, x2_class2, c='blue', edgecolors='k', label='Class -1')\n",
    "    plt.xlabel('Feature 1')\n",
    "    plt.ylabel('Feature 2')\n",
    "    plt.title('SVM Decision Boundary')\n",
    "    plt.legend()\n",
    "    plt.show()\n",
    "\n",
    "\n",
    "plot_decision_boundary(svm, X, y)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ad9030f3",
   "metadata": {
    "papermill": {
     "duration": 0.012489,
     "end_time": "2025-04-07T15:21:14.254434",
     "exception": false,
     "start_time": "2025-04-07T15:21:14.241945",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## TASK 2 : MULTI-CLASS SVM (30 marks)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "441057c6",
   "metadata": {
    "papermill": {
     "duration": 0.011735,
     "end_time": "2025-04-07T15:21:14.278036",
     "exception": false,
     "start_time": "2025-04-07T15:21:14.266301",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### TASK 2.1: VISUALISE THE MULTI-CLASS DATASET\n",
    "**You have been provided the muticlass dataset below which you will classify in the next part**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4b924c62",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:14.302338Z",
     "iopub.status.busy": "2025-04-07T15:21:14.302062Z",
     "iopub.status.idle": "2025-04-07T15:21:14.559206Z",
     "shell.execute_reply": "2025-04-07T15:21:14.558334Z"
    },
    "papermill": {
     "duration": 0.271879,
     "end_time": "2025-04-07T15:21:14.561689",
     "exception": false,
     "start_time": "2025-04-07T15:21:14.289810",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "X_multi, y_multi = make_blobs(n_samples=300, centers=3, random_state=42, cluster_std=1.5)\n",
    "\n",
    "y_multi = y_multi.astype(int) \n",
    "\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.scatter(X_multi[:, 0], X_multi[:, 1], c=y_multi, cmap='viridis', edgecolors='k', alpha=0.7)\n",
    "plt.title(\"Multiclass Dataset (make_blobs)\")\n",
    "plt.xlabel(\"Feature 1\")\n",
    "plt.ylabel(\"Feature 2\")\n",
    "plt.colorbar(label=\"Class Label\")\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e67c69d9",
   "metadata": {
    "papermill": {
     "duration": 0.014082,
     "end_time": "2025-04-07T15:21:14.592782",
     "exception": false,
     "start_time": "2025-04-07T15:21:14.578700",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## **Task 2.2: Modify SVM for Multi-Class Classification (One-vs-All)**\n",
    "In this section, we will extend our binary SVM to handle **multi-class classification** using the **One-vs-All (OvA)** approach.\n",
    "\n",
    "---\n",
    "\n",
    "### **Approach: One-vs-All (OvA)**\n",
    "Instead of a single SVM, we train **C binary SVM models**, where **C** is the number of unique classes in the dataset.\n",
    "\n",
    "For each class \\( c \\):\n",
    "1. Convert the labels into a **binary problem**:\n",
    "   - Assign **+1** to samples belonging to class \\( c \\).\n",
    "   - Assign **-1** to all other samples.\n",
    "2. Train a **separate binary SVM** using this modified dataset.\n",
    "\n",
    "Once all SVMs are trained, we make predictions by selecting the class with the **highest decision score**.\n",
    "\n",
    "---\n",
    "\n",
    "### **Why Use Softmax?**\n",
    "By default, multi-class SVM predicts the class with the **highest raw score**. However, these scores are **not probabilities**, making it hard to interpret confidence.  \n",
    "\n",
    "To address this, we apply the **Softmax function** to convert decision scores into probabilities:\n",
    "\n",
    "$$\n",
    "P(y = c \\mid X) = \\frac{e^{s_c}}{\\sum_{j=1}^{C} e^{s_j}}\n",
    "$$\n",
    "\n",
    "where:\n",
    "- \\( s_c \\) is the decision score for class \\( c \\).\n",
    "- \\( C \\) is the number of classes.\n",
    "- The denominator ensures probabilities sum to 1.\n",
    "\n",
    "---\n",
    "\n",
    "### **Function Breakdown**\n",
    "Below are the key functions you will implement:\n",
    "\n",
    "#### **`softmax(scores)`**\n",
    "- **Purpose**: Converts raw decision scores into probability distributions.\n",
    "- **Steps**:\n",
    "  1. Subtract the maximum score (stability trick).\n",
    "  2. Apply the **exponential function**.\n",
    "  3. Normalize by dividing by the sum of exponentials.\n",
    "\n",
    "---\n",
    "\n",
    "#### **`train_multiclass_svm(X, y, learning_rate=0.01, n_iters=1000)`**\n",
    "- **Purpose**: Trains multiple binary SVM classifiers using **One-vs-All (OvA)**.\n",
    "- **Steps**:\n",
    "  1. Identify the unique **classes** in `y`.\n",
    "  2. For each class:\n",
    "     - Convert labels to **binary** (`+1` for current class, `-1` for others).\n",
    "     - Train a **binary SVM** using the `fit` function.\n",
    "  3. Store the trained **SVM models**.\n",
    "\n",
    "---\n",
    "\n",
    "#### **`predict_multiclass_svm_softmax(X, classifiers, classes)`**\n",
    "- **Purpose**: Uses trained SVM models to predict class probabilities.\n",
    "- **Steps**:\n",
    "  1. Compute **decision scores** from all trained SVMs.\n",
    "  2. Apply the **Softmax function** to obtain class probabilities.\n",
    "  3. Return the class with the **highest probability**.\n",
    "\n",
    "---\n",
    "\n",
    "#### **`evaluate_multiclass_svm_softmax(X, y, classifiers, classes)`**\n",
    "- **Purpose**: Evaluates the performance of the multi-class SVM.\n",
    "- **Steps**:\n",
    "  1. Use `predict_multiclass_svm_softmax` to get class predictions.\n",
    "  2. Compare predictions with true labels `y`.\n",
    "  3. Compute **accuracy** as the fraction of correct predictions.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "efbace83",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:14.622337Z",
     "iopub.status.busy": "2025-04-07T15:21:14.622074Z",
     "iopub.status.idle": "2025-04-07T15:21:14.629794Z",
     "shell.execute_reply": "2025-04-07T15:21:14.628956Z"
    },
    "papermill": {
     "duration": 0.024417,
     "end_time": "2025-04-07T15:21:14.631372",
     "exception": false,
     "start_time": "2025-04-07T15:21:14.606955",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#helper\n",
    "def exp_func(x):\n",
    "    result = 1.0\n",
    "    term = 1.0\n",
    "    for n in range(1, 10):\n",
    "        term *= x / n\n",
    "        result += term\n",
    "    return result\n",
    "\n",
    "def softmax(scores):\n",
    "    \"\"\"\n",
    "    Compute the softmax probabilities from raw decision scores.\n",
    "\n",
    "    Args:\n",
    "    - scores: Array of shape (num_samples, num_classes) containing decision scores.\n",
    "\n",
    "    Returns:\n",
    "    - probabilities: Softmax probabilities of shape (num_samples, num_classes).\n",
    "    \"\"\"\n",
    "    # Numerical stability trick: subtract max score\n",
    "    scores = scores - np.max(scores, axis=1, keepdims=True)\n",
    "    # Calculate exponentials\n",
    "    exp_scores = np.exp(scores)\n",
    "    # Normalize\n",
    "    probs = exp_scores / np.sum(exp_scores, axis=1, keepdims=True)\n",
    "    return probs\n",
    "    \n",
    "\n",
    "def train_multiclass_svm(X, y, learning_rate=0.01, n_iters=1000):\n",
    "    \"\"\"\n",
    "    Train multiple binary SVM classifiers using One-vs-All (OvA).\n",
    "    \"\"\"\n",
    "    lp = 0.01\n",
    "    classes = np.unique(y)\n",
    "    classifiers = {}\n",
    "    for c in classes:\n",
    "        conv = np.where(y == c, 1, -1)\n",
    "        svm = SVM(learning_rate=learning_rate, n_iters=n_iters,lp=0.01)\n",
    "        svm.fit(X, conv)\n",
    "        classifiers[c] = svm\n",
    "\n",
    "    return classifiers, classes\n",
    "\n",
    "def predict_multiclass_svm_softmax(X, classifiers, classes):\n",
    "    \"\"\"\n",
    "    Predict class probabilities using Softmax over SVM decision scores.\n",
    "    \"\"\"\n",
    "    n_samples = X.shape[0]\n",
    "    scores = np.zeros((n_samples, len(classes)))\n",
    "    \n",
    "    for idx, c in enumerate(classes):\n",
    "        classifier = classifiers[c]\n",
    "        scores[:, idx] = np.dot(X, classifier.w) - classifier.b\n",
    "\n",
    "    softmaxxing_scores = softmax(scores)\n",
    "    #returning class with highest probability\n",
    "    return classes[np.argmax(softmaxxing_scores, axis=1)]\n",
    "    \n",
    "    \n",
    "\n",
    "def evaluate_multiclass_svm_softmax(X, y, classifiers, classes):\n",
    "    \"\"\"\n",
    "    Evaluate multi-class SVM using Softmax-based predictions.\n",
    "    \"\"\"\n",
    "    y_hat = predict_multiclass_svm_softmax(X, classifiers, classes)\n",
    "\n",
    "    acc = np.mean(y_hat == y)\n",
    "    return acc"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9d275f93",
   "metadata": {
    "papermill": {
     "duration": 0.021333,
     "end_time": "2025-04-07T15:21:14.673230",
     "exception": false,
     "start_time": "2025-04-07T15:21:14.651897",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## TASK 2.3: Evaluation and Visualisation\n",
    "\n",
    "**TODO:evaluate the model on the given dataset**\n",
    "\n",
    "**TODO: Plot the descision boundary showing the three classes and the boundaries**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "38a56fab",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:14.706083Z",
     "iopub.status.busy": "2025-04-07T15:21:14.705827Z",
     "iopub.status.idle": "2025-04-07T15:21:39.581191Z",
     "shell.execute_reply": "2025-04-07T15:21:39.580278Z"
    },
    "papermill": {
     "duration": 24.892256,
     "end_time": "2025-04-07T15:21:39.582751",
     "exception": false,
     "start_time": "2025-04-07T15:21:14.690495",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training Accuracy: 1.0\n",
      "Test Accuracy: 1.0\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x800 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x800 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "## your code here \n",
    "X_train, X_test, y_train, y_test = train_test_split(X_multi, y_multi, test_size=0.2, random_state=54)\n",
    "classifiers, classes = train_multiclass_svm(X_train, y_train, learning_rate=0.01, n_iters=1000)\n",
    "train_accuracy = evaluate_multiclass_svm_softmax(X_train, y_train, classifiers, classes)\n",
    "test_accuracy = evaluate_multiclass_svm_softmax(X_test, y_test, classifiers, classes)\n",
    "\n",
    "print(\"Training Accuracy:\", round(train_accuracy, 4))\n",
    "print(\"Test Accuracy:\", round(test_accuracy, 4))\n",
    "\n",
    "def plot_multiclass_decision_boundary(X_data, y_data, classifiers, classes):\n",
    "    h = 0.02\n",
    "\n",
    "    x_min = X_data[0][0]\n",
    "    x_max = X_data[0][0]\n",
    "    y_min = X_data[0][1]\n",
    "    y_max = X_data[0][1]\n",
    "\n",
    "    i = 1\n",
    "    while i < len(X_data):\n",
    "        if X_data[i][0] < x_min:\n",
    "            x_min = X_data[i][0]\n",
    "        if X_data[i][0] > x_max:\n",
    "            x_max = X_data[i][0]\n",
    "        if X_data[i][1] < y_min:\n",
    "            y_min = X_data[i][1]\n",
    "        if X_data[i][1] > y_max:\n",
    "            y_max = X_data[i][1]\n",
    "        i = i + 1\n",
    "\n",
    "    x_min = x_min - 1\n",
    "    x_max = x_max + 1\n",
    "    y_min = y_min - 1\n",
    "    y_max = y_max + 1\n",
    "\n",
    "    # Create grid points\n",
    "    x_points = []\n",
    "    temp_x = x_min\n",
    "    while temp_x <= x_max:\n",
    "        x_points.append(temp_x)\n",
    "        temp_x = temp_x + h\n",
    "\n",
    "    y_points = []\n",
    "    temp_y = y_min\n",
    "    while temp_y <= y_max:\n",
    "        y_points.append(temp_y)\n",
    "        temp_y = temp_y + h\n",
    "    xx = []\n",
    "    yy = []\n",
    "    i = 0\n",
    "    while i < len(y_points):\n",
    "        j = 0\n",
    "        while j < len(x_points):\n",
    "            xx.append(x_points[j])\n",
    "            yy.append(y_points[i])\n",
    "            j = j + 1\n",
    "        i = i + 1\n",
    "\n",
    "    mesh_points = []\n",
    "    i = 0\n",
    "    while i < len(xx):\n",
    "        mesh_points.append([xx[i], yy[i]])\n",
    "        i = i + 1\n",
    "\n",
    "    mesh_points = np.array(mesh_points)\n",
    "\n",
    "    scores = np.zeros((len(mesh_points), len(classes)))\n",
    "\n",
    "    i = 0\n",
    "    while i < len(classes):\n",
    "        c = classes[i]\n",
    "        classifier = classifiers[c]\n",
    "        j = 0\n",
    "        while j < len(mesh_points):\n",
    "            scores[j][i] = np.dot(mesh_points[j], classifier.w) - classifier.b\n",
    "            j = j + 1\n",
    "        i = i + 1\n",
    "\n",
    "    probas = softmax(scores)\n",
    "    predictions = np.zeros(probas.shape[0], dtype=int)\n",
    "\n",
    "    i = 0\n",
    "    while i < probas.shape[0]:\n",
    "        max_index = 0\n",
    "        max_value = probas[i][0]\n",
    "        j = 1\n",
    "        while j < probas.shape[1]:\n",
    "            if probas[i][j] > max_value:\n",
    "                max_index = j\n",
    "                max_value = probas[i][j]\n",
    "            j = j + 1\n",
    "        predictions[i] = classes[max_index]\n",
    "        i = i + 1\n",
    "\n",
    "    Z = predictions.reshape(len(y_points), len(x_points))\n",
    "\n",
    "    # Plotting\n",
    "    plt.figure(figsize=(10, 8))\n",
    "    plt.contourf(x_points, y_points, Z, alpha=0.4)\n",
    "\n",
    "    x_vals = []\n",
    "    y_vals = []\n",
    "    for i in range(len(X_data)):\n",
    "        x_vals.append(X_data[i][0])\n",
    "        y_vals.append(X_data[i][1])\n",
    "\n",
    "    scatter = plt.scatter(x_vals, y_vals, c=y_data, alpha=0.8)\n",
    "    plt.colorbar(scatter)\n",
    "\n",
    "    plt.xlabel('Feature 1')\n",
    "    plt.ylabel('Feature 2')\n",
    "    plt.title('Multi-class SVM Decision Boundary')\n",
    "    plt.show()\n",
    "\n",
    "plot_multiclass_decision_boundary(X_train, y_train, classifiers, classes)\n",
    "plot_multiclass_decision_boundary(X_test, y_test, classifiers, classes)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b5e2e464",
   "metadata": {
    "papermill": {
     "duration": 0.01831,
     "end_time": "2025-04-07T15:21:39.620841",
     "exception": false,
     "start_time": "2025-04-07T15:21:39.602531",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Task 3: KERNALIZED SVM (30 marks)\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d5b19cbc",
   "metadata": {
    "papermill": {
     "duration": 0.018288,
     "end_time": "2025-04-07T15:21:39.657525",
     "exception": false,
     "start_time": "2025-04-07T15:21:39.639237",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## TASK 3.1:\n",
    "\n",
    "**Now we will be working with a non linearly seperable dataset**\n",
    "\n",
    "**You have already been provided the dataset below**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "0c9b4974",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:39.695013Z",
     "iopub.status.busy": "2025-04-07T15:21:39.694726Z",
     "iopub.status.idle": "2025-04-07T15:21:39.854724Z",
     "shell.execute_reply": "2025-04-07T15:21:39.853835Z"
    },
    "papermill": {
     "duration": 0.180972,
     "end_time": "2025-04-07T15:21:39.856930",
     "exception": false,
     "start_time": "2025-04-07T15:21:39.675958",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.datasets import make_circles\n",
    "\n",
    "X_circles, y_circles = make_circles(n_samples=200, noise=0.05, factor=0.5, random_state=42)\n",
    "\n",
    "y_circles = np.where(y_circles == 0, -1, 1)\n",
    "\n",
    "plt.scatter(X_circles[:, 0], X_circles[:, 1], c=y_circles, cmap=plt.cm.coolwarm, edgecolors=\"k\")\n",
    "plt.xlabel(\"Feature 1\")\n",
    "plt.ylabel(\"Feature 2\")\n",
    "plt.title(\"Non-Linearly Separable Dataset (Circles)\")\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bcef45b9",
   "metadata": {
    "papermill": {
     "duration": 0.019674,
     "end_time": "2025-04-07T15:21:39.899597",
     "exception": false,
     "start_time": "2025-04-07T15:21:39.879923",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## TASK 3.2: Evaluating the Linear SVM on non linear data\n",
    "\n",
    "**Before we start implenting the kernalised SVM we should see the inution behind it**\n",
    "\n",
    "**To motivate this we will use our vanilla linear classifier that we made in task 1.2 to form the descion boundary**\n",
    "\n",
    "**TODO: Evaluate your model from part 1.2 on this circles dataset**\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "afff8c41",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:39.941386Z",
     "iopub.status.busy": "2025-04-07T15:21:39.941081Z",
     "iopub.status.idle": "2025-04-07T15:21:39.944054Z",
     "shell.execute_reply": "2025-04-07T15:21:39.943463Z"
    },
    "papermill": {
     "duration": 0.025421,
     "end_time": "2025-04-07T15:21:39.945174",
     "exception": false,
     "start_time": "2025-04-07T15:21:39.919753",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "## return the accuracy"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cc8091a5",
   "metadata": {
    "papermill": {
     "duration": 0.019997,
     "end_time": "2025-04-07T15:21:39.985401",
     "exception": false,
     "start_time": "2025-04-07T15:21:39.965404",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## TASK 3.3: **Kernelized SVM Implementation**  \n",
    "\n",
    "This class implements **Kernelized Support Vector Machine (SVM)** for classification tasks. It extends traditional SVM by using **kernel functions**, allowing it to handle **non-linearly separable data**.  \n",
    "\n",
    "---\n",
    "\n",
    "#### **1. Class Overview**  \n",
    "\n",
    "- **`__init__`**: Initializes hyperparameters like learning rate, regularization (`lambda`), number of iterations, and kernel type.  \n",
    "- **`polynomial_kernel(X, Y)`**: Computes the **polynomial kernel** using:  \n",
    "  $$K(x, y) = (x \\cdot y + 1)^{\\text{degree}}$$  \n",
    "- **`compute_kernel(X, Y)`**: Selects and applies the appropriate kernel function to input data.  \n",
    "\n",
    "---\n",
    "\n",
    "#### **2. Training the Model (`fit`)**  \n",
    "\n",
    "The **dual optimization problem** for SVM is solved using **gradient-based updates**:  \n",
    "\n",
    "1. **Initialize** Lagrange multipliers `alpha` and bias `b` to zero.  \n",
    "2. **Compute the kernel matrix**:  \n",
    "   $$K(x_i, x_j)$$  \n",
    "3. **Iterate** over the dataset for `n_iters`:  \n",
    "   - Check the **margin condition**:  \n",
    "     $$y_i \\cdot f(x_i) < 1$$  \n",
    "   - If true, update `alpha` and `b`:  \n",
    "     $$\\alpha_i \\leftarrow \\alpha_i + \\eta \\cdot (1 - y_i \\sum \\alpha_j y_j K(x_j, x_i))$$  \n",
    "     $$b \\leftarrow b + \\eta \\cdot y_i$$  \n",
    "4. Repeat until convergence.  \n",
    "\n",
    "---\n",
    "\n",
    "#### **3. Making Predictions (`predict`)**  \n",
    "\n",
    "After training, predictions are made using:  \n",
    "\n",
    "$$f(x) = \\sum (\\alpha_i y_i K(x_i, x)) + b$$  \n",
    "\n",
    "The final prediction is determined by the **sign** of \\( f(x) \\):  \n",
    "\n",
    "$$\\hat{y} = \\text{sign}(f(x))$$  \n",
    "\n",
    "---\n",
    "\n",
    "#### **4. Evaluation (`evaluate`)**  \n",
    "\n",
    "This function compares the predicted labels with actual labels and returns the **accuracy** of the model.  \n",
    "\n",
    "---\n",
    "\n",
    "Now, implement the **KernelSVM** class below. 🚀  \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "e2f74f1d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:40.027004Z",
     "iopub.status.busy": "2025-04-07T15:21:40.026752Z",
     "iopub.status.idle": "2025-04-07T15:21:40.031589Z",
     "shell.execute_reply": "2025-04-07T15:21:40.030934Z"
    },
    "papermill": {
     "duration": 0.026962,
     "end_time": "2025-04-07T15:21:40.032750",
     "exception": false,
     "start_time": "2025-04-07T15:21:40.005788",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "class KernelSVM:\n",
    "    def __init__(self, learning_rate=0.01, lambda_param=0.001, n_iters=1000, kernel=\"linear\", degree=3, gamma=0.5, custom_kernel=None):\n",
    "        self.lr = learning_rate\n",
    "        self.lambda_param = lambda_param\n",
    "        self.n_iters = n_iters\n",
    "        self.kernel = kernel\n",
    "        self.custom_kernel = custom_kernel  \n",
    "        self.alpha = None\n",
    "        self.b = None\n",
    "        self.X_train = None\n",
    "        self.y_train = None\n",
    "\n",
    "    def linear_kernel(self, X, Y):\n",
    "        pass  \n",
    "\n",
    "    def polynomial_kernel(self, X, Y):\n",
    "        pass  \n",
    "\n",
    "    def compute_kernel(self, X, Y):\n",
    "        pass  \n",
    "\n",
    "    def fit(self, X, y):\n",
    "        pass  \n",
    "\n",
    "    def predict(self, X):\n",
    "        pass  \n",
    "\n",
    "    def evaluate(self, X, y):\n",
    "        pass  \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37d85fd7",
   "metadata": {
    "papermill": {
     "duration": 0.020361,
     "end_time": "2025-04-07T15:21:40.073052",
     "exception": false,
     "start_time": "2025-04-07T15:21:40.052691",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## TASK 3.4: Evaluation and Visualising\n",
    "**Now you will evaluate your model above(return the accuracy on the circles dataset)**\n",
    "\n",
    "**Plot the descision boundary showing how your model performs on the circles dataset**\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "c31fd8ef",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:40.114156Z",
     "iopub.status.busy": "2025-04-07T15:21:40.113891Z",
     "iopub.status.idle": "2025-04-07T15:21:40.118791Z",
     "shell.execute_reply": "2025-04-07T15:21:40.118002Z"
    },
    "papermill": {
     "duration": 0.027197,
     "end_time": "2025-04-07T15:21:40.120128",
     "exception": false,
     "start_time": "2025-04-07T15:21:40.092931",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'\\nTODO: plot the descion boundary\\n'"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\"\"\"\n",
    "TODO: evaluate the model and return the accuracy\n",
    "\"\"\"\n",
    "\n",
    "\"\"\"\n",
    "TODO: plot the descion boundary\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63e8ffb7",
   "metadata": {
    "papermill": {
     "duration": 0.019924,
     "end_time": "2025-04-07T15:21:40.160858",
     "exception": false,
     "start_time": "2025-04-07T15:21:40.140934",
     "status": "completed"
    },
    "tags": []
   },
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "13ae06f1",
   "metadata": {
    "papermill": {
     "duration": 0.020516,
     "end_time": "2025-04-07T15:21:40.202078",
     "exception": false,
     "start_time": "2025-04-07T15:21:40.181562",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Random Forest Classifier**\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f7702fe",
   "metadata": {
    "papermill": {
     "duration": 0.020706,
     "end_time": "2025-04-07T15:21:40.243496",
     "exception": false,
     "start_time": "2025-04-07T15:21:40.222790",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# 🌲 **Understanding Random Forests: A Powerful Classification Algorithm**\n",
    "\n",
    "## 🔍 **What is Random Forest?**\n",
    "Random Forest is an ensemble learning method that constructs multiple decision trees during training and merges their outputs for better accuracy and stability. It reduces overfitting by averaging predictions from multiple trees.\n",
    "\n",
    "## 🛠 **How Does Random Forest Work?**\n",
    "1. **Bootstrap Sampling**: It randomly selects subsets of data for each tree.\n",
    "2. **Feature Selection**: At each split, it selects the best among randomly chosen features.\n",
    "3. **Tree Construction**: Each decision tree is grown independently.\n",
    "4. **Prediction Aggregation**: For classification, it takes the majority vote from all trees.\n",
    "\n",
    "## 🎯 **Why Use Random Forest?**\n",
    "✅ Handles missing values well.  \n",
    "✅ Works well with large datasets.  \n",
    "✅ Reduces overfitting by combining multiple trees.  \n",
    "✅ Can handle both classification and regression tasks.  \n",
    "\n",
    "Let's implement it step by step! 🚀"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63759aaf",
   "metadata": {
    "papermill": {
     "duration": 0.020447,
     "end_time": "2025-04-07T15:21:40.284615",
     "exception": false,
     "start_time": "2025-04-07T15:21:40.264168",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "![Image Description](https://i.ytimg.com/vi/goPiwckWE9M/maxresdefault.jpg)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e382a8e4",
   "metadata": {
    "papermill": {
     "duration": 0.020558,
     "end_time": "2025-04-07T15:21:40.325577",
     "exception": false,
     "start_time": "2025-04-07T15:21:40.305019",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 🏗 **Implementation Guidance**  \n",
    "- We will start by implementing decision trees.  \n",
    "- Then, we will build a random forest by combining multiple trees.  \n",
    "- Finally, we will compare our model with `sklearn`'s RandomForestClassifier.  \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a0b15bf1",
   "metadata": {
    "papermill": {
     "duration": 0.020536,
     "end_time": "2025-04-07T15:21:40.366245",
     "exception": false,
     "start_time": "2025-04-07T15:21:40.345709",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Part 2.1: Random Forest classification from Scratch (70 marks)\n",
    "\n",
    "You are <span style=\"color: red;\">not allowed</span> to use scikit-learn or any other machine learning toolkit for this part. You have to implement your own random forest classifier from scratch.\n",
    "\n",
    "## **Importing Libraries**\n",
    "\n",
    "All of the necessary libraries for this part have been imported for you below. You may not use any other library apart from standard Python librares.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ffee4557",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:40.407527Z",
     "iopub.status.busy": "2025-04-07T15:21:40.407176Z",
     "iopub.status.idle": "2025-04-07T15:21:41.419077Z",
     "shell.execute_reply": "2025-04-07T15:21:41.418430Z"
    },
    "papermill": {
     "duration": 1.034108,
     "end_time": "2025-04-07T15:21:41.420779",
     "exception": false,
     "start_time": "2025-04-07T15:21:40.386671",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix, ConfusionMatrixDisplay\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "960d0e7b",
   "metadata": {
    "papermill": {
     "duration": 0.020392,
     "end_time": "2025-04-07T15:21:41.498217",
     "exception": false,
     "start_time": "2025-04-07T15:21:41.477825",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Loading a CSV Dataset into a Pandas DataFrame**\n",
    "\n",
    "\n",
    "\n",
    "## We will be using the data.csv dataset provided for the Part2 of the assignment.\n",
    "\n",
    "## **Overview**\n",
    "To analyze and process data, we first need to load it into a **Pandas DataFrame**. This function helps in efficiently reading a CSV file and storing it in a structured format.\n",
    "\n",
    "## **Function: `load_csv(filename)`**\n",
    "This function reads a CSV file and loads it into a Pandas **DataFrame**.\n",
    "\n",
    "### **Implementation Details**\n",
    "- Uses `pd.read_csv()` to load the dataset from the specified file path.\n",
    "- Returns the loaded DataFrame, which can then be explored and used for further processing.\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "d51fbf56",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:41.541352Z",
     "iopub.status.busy": "2025-04-07T15:21:41.540848Z",
     "iopub.status.idle": "2025-04-07T15:21:41.545028Z",
     "shell.execute_reply": "2025-04-07T15:21:41.544121Z"
    },
    "papermill": {
     "duration": 0.027644,
     "end_time": "2025-04-07T15:21:41.546501",
     "exception": false,
     "start_time": "2025-04-07T15:21:41.518857",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def load_csv(filename):\n",
    "    \"\"\"\n",
    "    Loads a CSV file into a Pandas DataFrame.\n",
    "    \n",
    "    Parameters:\n",
    "    filename (str): The name or path of the CSV file to be loaded.\n",
    "    \n",
    "    Returns:\n",
    "    pd.DataFrame: A DataFrame containing the dataset.\n",
    "    \"\"\"\n",
    "    pass   # Replace this with your implementation\n",
    "\n",
    "dataset = None"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "80ad9285",
   "metadata": {
    "papermill": {
     "duration": 0.02136,
     "end_time": "2025-04-07T15:21:41.590016",
     "exception": false,
     "start_time": "2025-04-07T15:21:41.568656",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Label Encoding for Binary Classification**\n",
    "\n",
    "## **Overview**\n",
    "Before training the model, categorical labels in the dataset need to be converted into numerical values. This process, known as **label encoding**, is essential for machine learning models that require numerical inputs.\n",
    "\n",
    "## **Function: `encode_label_column(df)`**\n",
    "This function encodes the `\"class\"` column with binary values (0 and 1) based on the unique class labels.\n",
    "\n",
    "### **Implementation Details**\n",
    "- Identifies the unique class labels in the `\"class\"` column.\n",
    "- Maps the first unique value to `0` and the second unique value to `1`.\n",
    "- Modifies the original DataFrame by replacing the categorical labels with numerical values.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "77db239c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:41.634024Z",
     "iopub.status.busy": "2025-04-07T15:21:41.633718Z",
     "iopub.status.idle": "2025-04-07T15:21:41.637694Z",
     "shell.execute_reply": "2025-04-07T15:21:41.636770Z"
    },
    "papermill": {
     "duration": 0.027412,
     "end_time": "2025-04-07T15:21:41.639104",
     "exception": false,
     "start_time": "2025-04-07T15:21:41.611692",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def encode_label_column(df):\n",
    "    \"\"\"\n",
    "    Encodes the 'label' column with binary values (0 and 1).\n",
    "\n",
    "    Parameters:\n",
    "    df (pd.DataFrame): The DataFrame containing the 'Label' column.\n",
    "\n",
    "    Returns:\n",
    "    pd.DataFrame: The modified DataFrame with the 'Label' column encoded as 0 and 1.\n",
    "    \"\"\"\n",
    "    pass # Replace this with your implementation\n",
    "\n",
    "df = encode_label_column(dataset)\n",
    "\n",
    "# display the dataframe using df.head()\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "83407601",
   "metadata": {
    "papermill": {
     "duration": 0.021247,
     "end_time": "2025-04-07T15:21:41.681318",
     "exception": false,
     "start_time": "2025-04-07T15:21:41.660071",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Random Forest Classifier from Scratch**\n",
    "\n",
    "## **Overview**\n",
    "This section implements a Random Forest classifier from scratch using decision trees. The model is designed for classification tasks and supports:\n",
    "- **Bootstrap Sampling**: Randomly selecting subsets of data for each tree.\n",
    "- **Feature Subsampling**: Using a random subset of features for each split.\n",
    "- **Gini Index for Splitting**: Measuring impurity to determine the best split.\n",
    "- **Bagging for Prediction**: Aggregating predictions from multiple decision trees.\n",
    "- **Cross-Validation**: Evaluating the model with k-fold cross-validation.\n",
    "- **Feature Importance Calculation**: Determining the most influential features.\n",
    "\n",
    "## **Implementation Details**\n",
    "### **1. Model Initialization**\n",
    "- `max_depth`: Maximum depth of each decision tree.\n",
    "- `min_size`: Minimum number of samples required to split a node.\n",
    "- `sample_size`: Percentage of the dataset used to train each tree.\n",
    "- `n_trees`: Number of decision trees in the forest.\n",
    "- `n_features`: Number of features considered for splitting at each node.\n",
    "- `random_state`: Ensures reproducibility.\n",
    "\n",
    "### **2. Core Functions**\n",
    "### The following decision tree construction functions have been provided. Do NOT change these.\n",
    "#### **Decision Tree Construction**\n",
    "- `test_split(index, value, dataset)`: Splits data into left and right subsets based on a feature and threshold.\n",
    "- `gini_index(groups, classes)`: Computes impurity to evaluate a split.\n",
    "- `get_split(dataset)`: Finds the best feature and value to split the data.\n",
    "- `split(node, depth)`: Recursively splits the dataset until stopping criteria are met.\n",
    "- `build_tree(train)`: Constructs a decision tree.\n",
    "- `predict(node, row)`: Traverses a decision tree to make a prediction.\n",
    "- `to_terminal(self, group)`: Creates a terminal node with the most common class value.\n",
    "\n",
    "### You need to implement the following functions.\n",
    "#### **Random Forest Training and Prediction**\n",
    "- `subsample(dataset)`: Creates a bootstrap sample of the dataset.\n",
    "- `fit(train)`: Trains multiple decision trees on random subsets.\n",
    "- `bagging_predict(row)`: Aggregates predictions from multiple trees.\n",
    "\n",
    "\n",
    "#### **Model Evaluation**\n",
    "- `cross_validation_split(dataset, n_folds)`: Splits data into `n_folds` for cross-validation.\n",
    "- `evaluate(dataset, n_folds)`: Runs k-fold cross-validation and computes accuracy.\n",
    "\n",
    "#### **Feature Importance Analysis**\n",
    "- `calculate_feature_importance(num_features)`: Computes feature importance based on split frequency.\n",
    "- `get_feature_importance(feature_names)`: Maps feature names to their importance scores.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "0701d110",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:41.723892Z",
     "iopub.status.busy": "2025-04-07T15:21:41.723597Z",
     "iopub.status.idle": "2025-04-07T15:21:41.739536Z",
     "shell.execute_reply": "2025-04-07T15:21:41.738842Z"
    },
    "papermill": {
     "duration": 0.038435,
     "end_time": "2025-04-07T15:21:41.740761",
     "exception": false,
     "start_time": "2025-04-07T15:21:41.702326",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class RandomForest:\n",
    "    \"\"\"\n",
    "    Implements the Random Forest algorithm for classification.\n",
    "    \"\"\"\n",
    "    \n",
    "    def __init__(self, max_depth, min_size, sample_size, n_trees, n_features):\n",
    "        \"\"\"\n",
    "        Initializes the Random Forest model.\n",
    "\n",
    "        Parameters:\n",
    "        max_depth (int): Maximum depth of each decision tree.\n",
    "        min_size (int): Minimum size of a node before making it a leaf.\n",
    "        sample_size (float): Ratio of dataset to use for training each tree.\n",
    "        n_trees (int): Number of trees in the forest.\n",
    "        n_features (int): Number of features to consider for each split.\n",
    "        \"\"\"\n",
    "        self.max_depth = max_depth\n",
    "        self.min_size = min_size\n",
    "        self.sample_size = sample_size\n",
    "        self.n_trees = n_trees\n",
    "        self.n_features = n_features\n",
    "        self.trees = []\n",
    "        self.feature_importance = None\n",
    "        self.random_state=42\n",
    "        np.random.seed(self.random_state)\n",
    "\n",
    "    def test_split(self, index, value, dataset):\n",
    "        \"\"\"\n",
    "        Splits a dataset based on an attribute and its value.\n",
    "        \n",
    "        Parameters:\n",
    "        index (int): Index of the attribute to split on.\n",
    "        value (float): Value of the attribute to use as threshold.\n",
    "        dataset (DataFrame): The dataset to split.\n",
    "        \n",
    "        Returns:\n",
    "        left (DataFrame), right (DataFrame): Two subsets of the dataset.\n",
    "        \"\"\"\n",
    "        left = dataset[dataset.iloc[:, index] < value]\n",
    "        right = dataset[dataset.iloc[:, index] >= value]\n",
    "        return left, right\n",
    "    \n",
    "    def gini_index(self, groups, classes):\n",
    "        \"\"\"\n",
    "        Computes the Gini index for a given split.\n",
    "        \n",
    "        Parameters:\n",
    "        groups (tuple of DataFrames): The left and right groups after a split.\n",
    "        classes (list): Unique class labels in the dataset.\n",
    "        \n",
    "        Returns:\n",
    "        gini (float): The computed Gini index.\n",
    "        \"\"\"\n",
    "        n_instances = sum(len(group) for group in groups)\n",
    "        gini = 0.0\n",
    "        for group in groups:\n",
    "            size = len(group)\n",
    "            if size == 0:\n",
    "                continue\n",
    "            score = sum((sum(group.iloc[:, -1] == class_val) / size) ** 2 for class_val in classes)\n",
    "            gini += (1.0 - score) * (size / n_instances)\n",
    "        return gini\n",
    "    \n",
    "    def get_split(self, dataset):\n",
    "        \"\"\"\n",
    "        Finds the best attribute and value to split the dataset.\n",
    "        \n",
    "        Parameters:\n",
    "        dataset (DataFrame): The dataset to split.\n",
    "        \n",
    "        Returns:\n",
    "        dict: Contains index of best feature, best value, and resulting groups.\n",
    "        \"\"\"\n",
    "        class_values = dataset.iloc[:, -1].unique()\n",
    "        best_index, best_value, best_score, best_groups = None, None, float('inf'), None\n",
    "        features = np.random.choice(range(dataset.shape[1] - 1), self.n_features, replace=False)\n",
    "        for index in features:\n",
    "            for value in dataset.iloc[:, index].unique():\n",
    "                groups = self.test_split(index, value, dataset)\n",
    "                gini = self.gini_index(groups, class_values)\n",
    "                if gini < best_score:\n",
    "                    best_index, best_value, best_score, best_groups = index, value, gini, groups\n",
    "        return {'index': best_index, 'value': best_value, 'groups': best_groups}\n",
    "    \n",
    "    def to_terminal(self, group):\n",
    "        \"\"\"\n",
    "        Creates a terminal node with the most common class value.\n",
    "        \n",
    "        Parameters:\n",
    "        group (DataFrame): The dataset reaching the leaf node.\n",
    "        \n",
    "        Returns:\n",
    "        object: Most common class label.\n",
    "        \"\"\"\n",
    "        return group.iloc[:, -1].mode()[0]\n",
    "    \n",
    "    def split(self, node, depth):\n",
    "        \"\"\"\n",
    "        Recursively splits the tree until stopping conditions are met.\n",
    "        \n",
    "        Parameters:\n",
    "        node (dict): Current node containing split information.\n",
    "        depth (int): Current depth of the tree.\n",
    "        \"\"\"\n",
    "        left, right = node['groups']\n",
    "        del node['groups']\n",
    "        if left.empty or right.empty:\n",
    "            node['left'] = node['right'] = self.to_terminal(pd.concat([left, right]))\n",
    "            return\n",
    "        if depth >= self.max_depth:\n",
    "            node['left'], node['right'] = self.to_terminal(left), self.to_terminal(right)\n",
    "            return\n",
    "        for side, data in [('left', left), ('right', right)]:\n",
    "            if len(data) <= self.min_size:\n",
    "                node[side] = self.to_terminal(data)\n",
    "            else:\n",
    "                node[side] = self.get_split(data)\n",
    "                self.split(node[side], depth + 1)\n",
    "    \n",
    "    def build_tree(self, train):\n",
    "        \"\"\"\n",
    "        Builds a decision tree from training data.\n",
    "        \n",
    "        Parameters:\n",
    "        train (DataFrame): Training dataset.\n",
    "        \n",
    "        Returns:\n",
    "        dict: Root node of the decision tree.\n",
    "        \"\"\"\n",
    "        root = self.get_split(train)\n",
    "        self.split(root, 1)\n",
    "        return root\n",
    "    \n",
    "    def predict(self, node, row):\n",
    "        \"\"\"\n",
    "        Predicts class label for a given row.\n",
    "        \n",
    "        Parameters:\n",
    "        node (dict): Decision tree node.\n",
    "        row (Series): Single instance to classify.\n",
    "        \n",
    "        Returns:\n",
    "        object: Predicted class label.\n",
    "        \"\"\"\n",
    "        if row.iloc[node['index']] < node['value']:\n",
    "            return self.predict(node['left'], row) if isinstance(node['left'], dict) else node['left']\n",
    "        else:\n",
    "            return self.predict(node['right'], row) if isinstance(node['right'], dict) else node['right']\n",
    "    \n",
    "    def subsample(self, dataset):\n",
    "        \"\"\"\n",
    "        Creates a random subsample of the dataset.\n",
    "        \n",
    "        Parameters:\n",
    "        dataset (DataFrame): The dataset to sample from.\n",
    "        \n",
    "        Returns:\n",
    "        DataFrame: Random subsample.\n",
    "        \"\"\"\n",
    "        pass # Replace this with your implementation\n",
    "    \n",
    "    def fit(self, train):\n",
    "        \"\"\"\n",
    "        Trains multiple decision trees.\n",
    "        \n",
    "        Parameters:\n",
    "        train (DataFrame): Training dataset.\n",
    "        \"\"\"\n",
    "        pass # Replace this with your implementation\n",
    "    \n",
    "    def bagging_predict(self, row):\n",
    "        \"\"\"\n",
    "        Aggregates predictions from multiple trees.\n",
    "        \n",
    "        Parameters:\n",
    "        row (Series): Single instance to classify.\n",
    "        \n",
    "        Returns:\n",
    "        object: Final predicted class label.\n",
    "        \"\"\"\n",
    "        pass # Replace this with your implementation\n",
    "    \n",
    "    def cross_validation_split(self, dataset, n_folds):\n",
    "        \"\"\"\n",
    "        Splits dataset into k folds for cross-validation.\n",
    "        \n",
    "        Parameters:\n",
    "        dataset (DataFrame): Dataset to split.\n",
    "        n_folds (int): Number of folds.\n",
    "        \n",
    "        Returns:\n",
    "        list: List of DataFrame folds.\n",
    "        \"\"\"\n",
    "        pass # Replace this with your implementation\n",
    "    \n",
    "    def evaluate(self, dataset, n_folds):\n",
    "        \"\"\"\n",
    "        Evaluates the model using k-fold cross-validation.\n",
    "        \"\"\"\n",
    "        pass # Replace this with your implementation\n",
    "        \n",
    "    def calculate_feature_importance(self, num_features):\n",
    "        \"\"\"\n",
    "        Computes feature importance based on the number of times each feature \n",
    "        is used for splitting across all decision trees in the model.\n",
    "        \n",
    "        Parameters:\n",
    "        num_features (int): The total number of features in the dataset.\n",
    "        \n",
    "        Updates:\n",
    "        self.feature_importance (ndarray): A normalized array of feature importance scores.\n",
    "        \"\"\"\n",
    "        pass # Replace this with your implementation\n",
    "    \n",
    "    def get_feature_importance(self, feature_names):\n",
    "        \"\"\"\n",
    "        Returns a dictionary mapping feature names to their computed importance scores.\n",
    "        \n",
    "        Parameters:\n",
    "        feature_names (list of str): The names of the features.\n",
    "        \n",
    "        Returns:\n",
    "        dict: A dictionary where keys are feature names and values are their importance scores.\n",
    "        \"\"\"\n",
    "        pass # Replace this with your implementation   \n",
    "\n",
    "\n",
    "\n",
    "   \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2dbdead2",
   "metadata": {
    "papermill": {
     "duration": 0.019986,
     "end_time": "2025-04-07T15:21:41.781606",
     "exception": false,
     "start_time": "2025-04-07T15:21:41.761620",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Hyperparameter Tuning: Number of Trees in Random Forest**\n",
    "\n",
    "## **Objective**\n",
    "In this experiment, we evaluate the impact of varying the number of trees (`n_trees`) in a Random Forest classifier on model performance. The goal is to determine the optimal number of trees by comparing accuracy, precision, and F1-score.\n",
    "\n",
    "## **Steps to Follow**\n",
    "\n",
    "### **1. Initialize Parameters**\n",
    "- Define a list of values for `n_trees` (number of decision trees) to test.\n",
    "- Set fixed values for:\n",
    "  - `max_depth` = 10 (maximum depth of each decision tree).\n",
    "  - `min_size` = 1 (minimum samples per leaf node).\n",
    "  - `sample_size` = 0.8 (proportion of dataset samples used per tree).\n",
    "  - `n_features` = int((df.shape[1] - 1) ** 0.5) (number of features used per split, computed as \\(\\sqrt{\\text{total features}}\\)).\n",
    "  - `n_folds` = 5 (number of folds for cross-validation).\n",
    "\n",
    "### **2. Train and Evaluate Random Forest Model**\n",
    "For each value of `n_trees`:\n",
    "1. **Initialize** a `RandomForest` instance with the given hyperparameters.\n",
    "2. **Perform cross-validation**:\n",
    "   - Train the model on different folds.\n",
    "   - Compute accuracy scores for each fold.\n",
    "3. **Compute Performance Metrics**:\n",
    "   - Calculate mean accuracy.\n",
    "   - Extract true labels (`y_true`) and predicted labels (`y_pred`) across all folds.\n",
    "   - Compute **precision** and **F1-score** using weighted averaging.\n",
    "4. **Store Results**:\n",
    "   - Append mean accuracy, precision, and F1-score to their respective lists.\n",
    "   - Update the best performing model based on accuracy.\n",
    "\n",
    "### **3. Select the Best Model**\n",
    "- Track the best value of `n_trees` that results in the highest mean accuracy.\n",
    "- Store the corresponding `y_true` and `y_pred` values for further analysis.\n",
    "\n",
    "## **Expected Output**\n",
    "- Fold-wise accuracy for each `n_trees` value.\n",
    "- Mean accuracy, precision, and F1-score.\n",
    "- The best `n_trees` based on accuracy.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "4dfefb2c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:41.823575Z",
     "iopub.status.busy": "2025-04-07T15:21:41.823276Z",
     "iopub.status.idle": "2025-04-07T15:21:41.827466Z",
     "shell.execute_reply": "2025-04-07T15:21:41.826777Z"
    },
    "papermill": {
     "duration": 0.026351,
     "end_time": "2025-04-07T15:21:41.828687",
     "exception": false,
     "start_time": "2025-04-07T15:21:41.802336",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "tree_values = [1, 5, 10, 15, 20]\n",
    "accuracies = []\n",
    "precisions = []\n",
    "f1_scores = []\n",
    "max_depth = 10\n",
    "min_size = 1\n",
    "sample_size = 0.8\n",
    "n_features = None # use int((df.shape[1] - 1) ** 0.5)  \n",
    "n_folds = 5 \n",
    "\n",
    "best_n_trees = None\n",
    "best_accuracy = 0\n",
    "best_y_true = None\n",
    "best_y_pred = None\n",
    "\n",
    "for n_trees in tree_values:\n",
    "    pass # Replace this with your implementation\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "90bfaee4",
   "metadata": {
    "papermill": {
     "duration": 0.020293,
     "end_time": "2025-04-07T15:21:41.869171",
     "exception": false,
     "start_time": "2025-04-07T15:21:41.848878",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Visualization: Impact of Number of Trees on Performance Metrics**\n",
    "\n",
    "## **Objective**\n",
    "This section visualizes how the number of trees (`n_trees`) in the Random Forest model affects:\n",
    "- Mean Accuracy\n",
    "- Precision\n",
    "- F1 Score\n",
    "\n",
    "## **Plot Description**\n",
    "- We generate three subplots in a single row to compare the effect of `n_trees` on different metrics.\n",
    "- Each plot represents:\n",
    "  1. **Mean Accuracy vs. Number of Trees**\n",
    "  2. **Precision vs. Number of Trees**\n",
    "  3. **F1 Score vs. Number of Trees** \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "567b9b28",
   "metadata": {
    "papermill": {
     "duration": 0.019442,
     "end_time": "2025-04-07T15:21:41.908565",
     "exception": false,
     "start_time": "2025-04-07T15:21:41.889123",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "31f08dc1",
   "metadata": {
    "papermill": {
     "duration": 0.020644,
     "end_time": "2025-04-07T15:21:41.949535",
     "exception": false,
     "start_time": "2025-04-07T15:21:41.928891",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Confusion Matrix Visualization**\n",
    "\n",
    "## **Overview**\n",
    "A **confusion matrix** is a performance evaluation metric for classification models. It helps in understanding how well the model is classifying instances by displaying:\n",
    "- **True Positives (TP)**: Correctly predicted positive cases.\n",
    "- **True Negatives (TN)**: Correctly predicted negative cases.\n",
    "- **False Positives (FP)**: Incorrectly predicted positive cases.\n",
    "- **False Negatives (FN)**: Incorrectly predicted negative cases.\n",
    "\n",
    "## **Plotting the Confusion Matrix**\n",
    "We use **Seaborn's heatmap** to visually represent the confusion matrix.\n",
    "\n",
    "### **Implementation Details**\n",
    "- Computes the confusion matrix using `confusion_matrix(y_true, y_pred)`.\n",
    "- Uses `sns.heatmap()` to plot the matrix with numerical annotations.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "63bf9e7f",
   "metadata": {
    "papermill": {
     "duration": 0.019913,
     "end_time": "2025-04-07T15:21:41.990173",
     "exception": false,
     "start_time": "2025-04-07T15:21:41.970260",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "1f957b51",
   "metadata": {
    "papermill": {
     "duration": 0.020532,
     "end_time": "2025-04-07T15:21:42.031301",
     "exception": false,
     "start_time": "2025-04-07T15:21:42.010769",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Feature Importance Calculation in Random Forest**\n",
    "\n",
    "## **Overview**\n",
    "Feature importance in a **Random Forest model** helps identify which features contribute the most to model predictions. The higher the importance score, the more influential the feature is in decision-making.\n",
    "\n",
    "## **Steps Involved**\n",
    "1. **Selecting the Best Number of Trees (`n_trees`)**  \n",
    "   - We choose the number of trees that resulted in the highest accuracy during training.\n",
    "   - Extracts the best value from `tree_values` based on the highest accuracy.\n",
    "\n",
    "2. **Training the Random Forest Model**\n",
    "   - Creates a new `RandomForest` instance with optimal parameters.\n",
    "   - Fits the model to the dataset.\n",
    "\n",
    "3. **Computing Feature Importance**\n",
    "   - Calls `calculate_feature_importance()`, which counts the number of times each feature is used for splitting.\n",
    "   - The importance values are normalized.\n",
    "\n",
    "4. **Identifying Top Features**\n",
    "   - The top **5 most important features** are extracted and sorted in descending order.\n",
    "   - The cumulative contribution of these top 5 features is calculated.\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "5e31c16a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:42.074051Z",
     "iopub.status.busy": "2025-04-07T15:21:42.073778Z",
     "iopub.status.idle": "2025-04-07T15:21:42.077584Z",
     "shell.execute_reply": "2025-04-07T15:21:42.076799Z"
    },
    "papermill": {
     "duration": 0.027247,
     "end_time": "2025-04-07T15:21:42.078951",
     "exception": false,
     "start_time": "2025-04-07T15:21:42.051704",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Uncomment the commented print statements after your implementation\n",
    "best_n_trees = None # Replace this with your implementation\n",
    "# print(f\" best number of trees: {best_n_trees}\")\n",
    "\n",
    "\n",
    "total_importance = None  # Replace this with your implementation\n",
    "# print(f\" total importance: {total_importance}\")\n",
    "\n",
    "top_features = None # Replace this with your implementation\n",
    "\n",
    "cumulative_percentage = None # Replace this with your implementation\n",
    "# print(f\"\\nTotal Contribution of Top 5 Features: {cumulative_percentage:.2f}%\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "206a6fd1",
   "metadata": {
    "papermill": {
     "duration": 0.02,
     "end_time": "2025-04-07T15:21:42.119885",
     "exception": false,
     "start_time": "2025-04-07T15:21:42.099885",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Feature Importance Visualization in Random Forest**\n",
    "\n",
    "## **Overview**\n",
    "After computing feature importance in our **Random Forest model**, we visualize the **top contributing features** using a **horizontal bar plot**. This helps to understand which features have the most impact on predictions.\n",
    "\n",
    "---\n",
    "\n",
    "## **Steps Involved**\n",
    "1. **Create a DataFrame for Top Features**\n",
    "   - Extract the **top 5 features** and their importance scores.\n",
    "   - Store them in a Pandas DataFrame for easy plotting.\n",
    "\n",
    "\n",
    "2. **Visualize Feature Importance using a Bar Chart**\n",
    "   - A **Seaborn barplot** is used for clear visualization.\n",
    "   - The features are displayed on the **Y-axis** in descending order of importance.\n",
    "   - The corresponding importance scores are on the **X-axis**.\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "7a3c6fb2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:42.160627Z",
     "iopub.status.busy": "2025-04-07T15:21:42.160401Z",
     "iopub.status.idle": "2025-04-07T15:21:42.163341Z",
     "shell.execute_reply": "2025-04-07T15:21:42.162758Z"
    },
    "papermill": {
     "duration": 0.024613,
     "end_time": "2025-04-07T15:21:42.164507",
     "exception": false,
     "start_time": "2025-04-07T15:21:42.139894",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "importance_df = None # Replace this with your implementation"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d440de33",
   "metadata": {
    "papermill": {
     "duration": 0.020436,
     "end_time": "2025-04-07T15:21:42.206331",
     "exception": false,
     "start_time": "2025-04-07T15:21:42.185895",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Random Forest Evaluation on Top Features**\n",
    "\n",
    "## **Overview**\n",
    "After selecting the **top 5 most important features**, we train and evaluate a **Random Forest classifier** using only these features. The goal is to analyze whether reducing the feature set improves or maintains accuracy.\n",
    "\n",
    "---\n",
    "\n",
    "## **Steps Involved**\n",
    "1. **Select the Top Features**\n",
    "   - Extract the **top 5 most important features** based on feature importance.\n",
    "   - Add the **target column** to the dataset.\n",
    "\n",
    "2. **Run Random Forest on Reduced Feature Set**\n",
    "   - Iterate over different numbers of trees (`n_trees`).\n",
    "   - Perform **k-fold cross-validation** to evaluate the model.\n",
    "   - Compute **accuracy, precision, and F1 score** for each model.\n",
    "\n",
    "3. **Track the Best Model**\n",
    "   - Identify the `n_trees` value with the **best accuracy**.\n",
    "   - Store the corresponding **true and predicted labels** for evaluation.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "3d1f4b4d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:42.247683Z",
     "iopub.status.busy": "2025-04-07T15:21:42.247442Z",
     "iopub.status.idle": "2025-04-07T15:21:42.251905Z",
     "shell.execute_reply": "2025-04-07T15:21:42.250937Z"
    },
    "papermill": {
     "duration": 0.026563,
     "end_time": "2025-04-07T15:21:42.253164",
     "exception": false,
     "start_time": "2025-04-07T15:21:42.226601",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Running Random Forest on Dataset with Top Features...\n",
      "\n"
     ]
    }
   ],
   "source": [
    "top_feature_names = None # Replace this with your implementation\n",
    "\n",
    "df_top = None # Replace this with your implementation\n",
    "\n",
    "accuracies_top = []\n",
    "precisions_top = []\n",
    "f1_scores_top = []\n",
    "\n",
    "n_features_top = None # use int((df_top.shape[1] - 1) ** 0.5)  \n",
    "\n",
    "print(\"\\nRunning Random Forest on Dataset with Top Features...\\n\")\n",
    "\n",
    "best_n_trees_top = None\n",
    "best_accuracy_top = 0\n",
    "best_y_true_top = None\n",
    "best_y_pred_top = None\n",
    "\n",
    "for n_trees in tree_values:\n",
    "    pass # Replace this with your implementation\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "261b9e36",
   "metadata": {
    "papermill": {
     "duration": 0.020738,
     "end_time": "2025-04-07T15:21:42.294476",
     "exception": false,
     "start_time": "2025-04-07T15:21:42.273738",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Effect of n_trees on Model Performance (Top Features)**\n",
    "## **Overview**\n",
    "This section visualizes how the number of trees (`n_trees`) in a **Random Forest** affects model performance metrics when using only the **top 5 most important features**.\n",
    "\n",
    "### **Key Metrics:**\n",
    "- **Accuracy**: Measures overall correctness of predictions.\n",
    "- **Precision**: Evaluates the proportion of true positive predictions.\n",
    "- **F1 Score**: Balances precision and recall for better classification insight.\n",
    "\n",
    "## **Plot Description**\n",
    "- We generate three subplots in a single row to compare the effect of `n_trees` on different metrics.\n",
    "- Each plot represents:\n",
    "  1. **Mean Accuracy vs. Number of Trees**\n",
    "  2. **Precision vs. Number of Trees**\n",
    "  3. **F1 Score vs. Number of Trees** "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "65425c9e",
   "metadata": {
    "papermill": {
     "duration": 0.020785,
     "end_time": "2025-04-07T15:21:42.335664",
     "exception": false,
     "start_time": "2025-04-07T15:21:42.314879",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "12a65966",
   "metadata": {
    "papermill": {
     "duration": 0.020448,
     "end_time": "2025-04-07T15:21:42.376739",
     "exception": false,
     "start_time": "2025-04-07T15:21:42.356291",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Confusion Matrix for Best Random Forest Model (Top Features)**\n",
    "## **Overview**\n",
    "This section visualizes the **confusion matrix** for the best-performing Random Forest model using only the **top 5 most important features**.\n",
    "\n",
    "### **Implementation Details**\n",
    "- Computes the confusion matrix using `confusion_matrix(y_true, y_pred)`.\n",
    "- Uses `sns.heatmap()` to plot the matrix with numerical annotations.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "64389668",
   "metadata": {
    "papermill": {
     "duration": 0.019744,
     "end_time": "2025-04-07T15:21:42.416437",
     "exception": false,
     "start_time": "2025-04-07T15:21:42.396693",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "c75f6489",
   "metadata": {
    "papermill": {
     "duration": 0.019648,
     "end_time": "2025-04-07T15:21:42.455820",
     "exception": false,
     "start_time": "2025-04-07T15:21:42.436172",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Accuracy Comparison: All Features vs. Top Features\n",
    "\n",
    "## Objective:\n",
    "Compare the accuracy of the Random Forest model using all features versus only the top selected features.\n",
    "\n",
    "## Steps:\n",
    "\n",
    "1. **Set up the plot** with an appropriate figure size.\n",
    "2. **Plot accuracy for all features** using a line graph with markers.\n",
    "3. **Plot accuracy for top features** using a different color and lifestyle.\n",
    "4. **Label the axes** for clarity.\n",
    "5. **Add a title** to describe the comparison.\n",
    "6. **Include a grid and legend** for better readability.\n",
    "7. **Display the plot** to visualize the accuracy trends."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ded5449d",
   "metadata": {
    "papermill": {
     "duration": 0.019576,
     "end_time": "2025-04-07T15:21:42.495531",
     "exception": false,
     "start_time": "2025-04-07T15:21:42.475955",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b17f5ab2",
   "metadata": {
    "papermill": {
     "duration": 0.020378,
     "end_time": "2025-04-07T15:21:42.535662",
     "exception": false,
     "start_time": "2025-04-07T15:21:42.515284",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "\n",
    "\n",
    "\n",
    "\n",
    "Q1. Comment on the accuracy trends for both models.\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b4479df4",
   "metadata": {
    "papermill": {
     "duration": 0.020449,
     "end_time": "2025-04-07T15:21:42.576416",
     "exception": false,
     "start_time": "2025-04-07T15:21:42.555967",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Q2. Compare their performance, particularly when the number of trees is 1. Provide appropriate explanations for the observed trends.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ab52302",
   "metadata": {
    "papermill": {
     "duration": 0.021535,
     "end_time": "2025-04-07T15:21:42.618372",
     "exception": false,
     "start_time": "2025-04-07T15:21:42.596837",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 🌟 You're Halfway There! Keep Going! 🚀\n",
    "You've implemented Random Forest from scratch and gained valuable insights. Now, let's leverage `sklearn` for further exploration!"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "433ca9a6",
   "metadata": {
    "papermill": {
     "duration": 0.021936,
     "end_time": "2025-04-07T15:21:42.662024",
     "exception": false,
     "start_time": "2025-04-07T15:21:42.640088",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Part 2.2 : Random Forest classification using sklearn library (30 marks)\n",
    "\n",
    "You are <span style=\"color: red;\">not allowed</span> to use scikit-learn or any other machine learning toolkit for this part. You have to implement your own random forest classifier from scratch.\n",
    "\n",
    "## **Importing Libraries**\n",
    "\n",
    "All of the necessary libraries for this part have been imported for you below. You may not use any other library apart from standard Python librares.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "9ae887b0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:42.706524Z",
     "iopub.status.busy": "2025-04-07T15:21:42.706173Z",
     "iopub.status.idle": "2025-04-07T15:21:42.980177Z",
     "shell.execute_reply": "2025-04-07T15:21:42.979262Z"
    },
    "papermill": {
     "duration": 0.297662,
     "end_time": "2025-04-07T15:21:42.981813",
     "exception": false,
     "start_time": "2025-04-07T15:21:42.684151",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.model_selection import StratifiedKFold\n",
    "from sklearn.tree import plot_tree\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "75fb7a81",
   "metadata": {
    "papermill": {
     "duration": 0.020325,
     "end_time": "2025-04-07T15:21:43.023558",
     "exception": false,
     "start_time": "2025-04-07T15:21:43.003233",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Evaluating Random Forest with Different Tree Counts\n",
    "\n",
    "## Objective:\n",
    "Assess the performance of a Random Forest model using different numbers of trees (`n_trees`) and k-fold cross-validation.\n",
    "\n",
    "## Steps:\n",
    "\n",
    "1. **Initialize lists** to store accuracy, precision, and F1 scores.\n",
    "2. **Define cross-validation strategy** using `StratifiedKFold` to ensure balanced splits.\n",
    "3. **Loop through different tree counts (`n_trees`)** and:\n",
    "   - Train the sklearn Random Forest model with the specified number of trees.\n",
    "   - Perform k-fold cross-validation.\n",
    "   - Calculate accuracy, precision, and F1 scores.\n",
    "   - Store the results for comparison.\n",
    "4. **Identify the best-performing model** based on accuracy.\n",
    "5. **Return the evaluation metrics** for further analysis.\n",
    "\n",
    "## Expected Outcome:\n",
    "A summary of accuracy, precision, and F1 score for each `n_trees` value, along with the best-performing tree count.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "c6c702d5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:43.065238Z",
     "iopub.status.busy": "2025-04-07T15:21:43.064942Z",
     "iopub.status.idle": "2025-04-07T15:21:43.069449Z",
     "shell.execute_reply": "2025-04-07T15:21:43.068736Z"
    },
    "papermill": {
     "duration": 0.027218,
     "end_time": "2025-04-07T15:21:43.070707",
     "exception": false,
     "start_time": "2025-04-07T15:21:43.043489",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def evaluate_random_forest(X, y, n_trees_values, n_folds=5):\n",
    "    \"\"\"\n",
    "    Evaluates a Random Forest model using Stratified K-Fold cross-validation.\n",
    "\n",
    "    Parameters:\n",
    "    - X (pd.DataFrame): Feature matrix.\n",
    "    - y (pd.Series): Target labels.\n",
    "    - n_trees_values (list): Different values of 'n_trees' to evaluate.\n",
    "    - n_folds (int, optional): Number of folds for cross-validation (default is 5).\n",
    "\n",
    "    Returns:\n",
    "    - accuracies (list): Mean accuracy for each 'n_trees' value.\n",
    "    - precisions (list): Precision scores for each 'n_trees' value.\n",
    "    - f1_scores (list): F1 scores for each 'n_trees' value.\n",
    "    - best_n_trees (int): The value of 'n_trees' that gave the highest accuracy.\n",
    "    - best_y_true (list): True labels corresponding to the best model.\n",
    "    - best_y_pred (list): Predicted labels corresponding to the best model.\n",
    "    \"\"\"\n",
    "    accuracies = []\n",
    "    precisions = []\n",
    "    f1_scores = []\n",
    "    \n",
    "    best_n_trees = None\n",
    "    best_accuracy = 0\n",
    "    best_y_true = None\n",
    "    best_y_pred = None\n",
    "\n",
    "    skf = StratifiedKFold(n_splits=n_folds, shuffle=True, random_state=42)\n",
    "\n",
    "    for n_trees in n_trees_values:\n",
    "        pass # Replace this with your implementation\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1974c1cf",
   "metadata": {
    "papermill": {
     "duration": 0.021107,
     "end_time": "2025-04-07T15:21:43.113704",
     "exception": false,
     "start_time": "2025-04-07T15:21:43.092597",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Evaluating Random Forest on Full Dataset\n",
    "\n",
    "## Objective:\n",
    "Analyze the effect of the number of trees (`n_trees`) in a Random Forest model on classification accuracy.\n",
    "\n",
    "## Steps:\n",
    "\n",
    "1. **Extract Features and Labels**  \n",
    "   - `X`: All columns except the last (features).  \n",
    "   - `y`: The last column (target variable).  \n",
    "\n",
    "2. **Define Tree Values**  \n",
    "   - A list of different tree counts to test in the model.\n",
    "\n",
    "3. **Run Random Forest Evaluation**  \n",
    "   - Call `evaluate_random_forest(X, y, tree_values)`.  \n",
    "   - Collect accuracy, precision, and F1 scores for each `n_trees`.\n",
    "\n",
    "4. **Plot Accuracy vs. Number of Trees**  \n",
    "   - Use `matplotlib` to visualize the effect of `n_trees` on accuracy.  \n",
    "   - The plot will show how accuracy changes with different tree counts.\n",
    "\n",
    "## Expected Outcome:\n",
    "A graph illustrating the impact of `n_trees` on model accuracy, helping to determine the optimal number of trees.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "01adf37c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:43.157804Z",
     "iopub.status.busy": "2025-04-07T15:21:43.157564Z",
     "iopub.status.idle": "2025-04-07T15:21:43.162038Z",
     "shell.execute_reply": "2025-04-07T15:21:43.161141Z"
    },
    "papermill": {
     "duration": 0.028174,
     "end_time": "2025-04-07T15:21:43.163257",
     "exception": false,
     "start_time": "2025-04-07T15:21:43.135083",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Running Random Forest on Full Dataset...\n",
      "\n"
     ]
    }
   ],
   "source": [
    "X = None # use df.iloc[:, :-1] \n",
    "y = None # use df.iloc[:, -1]  \n",
    "\n",
    "tree_values = [1, 5, 10, 15, 20]\n",
    "\n",
    "print(\"\\nRunning Random Forest on Full Dataset...\\n\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d2a7c89",
   "metadata": {
    "papermill": {
     "duration": 0.025904,
     "end_time": "2025-04-07T15:21:43.215867",
     "exception": false,
     "start_time": "2025-04-07T15:21:43.189963",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Feature Importance and Decision Tree Visualization\n",
    "\n",
    "### 1. Train a Random Forest Model\n",
    "- A `RandomForestClassifier` is trained with `n_estimators=50` and `max_depth=10` on the dataset.\n",
    "- The model learns feature importances based on how much they contribute to decision-making.\n",
    "\n",
    "### 2. Identify Top 5 Features\n",
    "- Extract feature importances from the trained model.\n",
    "- Sort them in descending order and select the top 5 most important features.\n",
    "- Display the selected features.\n",
    "\n",
    "### 3. Visualize a Single Decision Tree\n",
    "- Extract one decision tree from the trained random forest using rf_importance.estimators_[0]\n",
    "- Use `plot_tree()` to visualize its structure.\n",
    "- Label nodes using feature names and class labels.\n",
    "\n",
    "### 4. Display the Decision Tree\n",
    "- Plot the extracted tree with color-coded nodes.\n",
    "- The title of the plot is set to \"Visualization of a Single Decision Tree from Random Forest.\"\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "54521378",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:43.265804Z",
     "iopub.status.busy": "2025-04-07T15:21:43.265373Z",
     "iopub.status.idle": "2025-04-07T15:21:43.269939Z",
     "shell.execute_reply": "2025-04-07T15:21:43.269111Z"
    },
    "papermill": {
     "duration": 0.02755,
     "end_time": "2025-04-07T15:21:43.271330",
     "exception": false,
     "start_time": "2025-04-07T15:21:43.243780",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "rf_importance = None # Replace this with your implementation\n",
    "\n",
    "\n",
    "top_features = None # Replace this with your implementation\n",
    "\n",
    "# print(\"Top 5 Features:\", top_features)  #uncomment after implementation\n",
    "\n",
    "X_top = None # Replace this with your implementation\n",
    "selected_tree = None # use rf_importance.estimators_[0]  \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "44d52b2b",
   "metadata": {
    "papermill": {
     "duration": 0.022135,
     "end_time": "2025-04-07T15:21:43.314742",
     "exception": false,
     "start_time": "2025-04-07T15:21:43.292607",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Evaluating Random Forest on Top 5 Features\n",
    "\n",
    "### 1. Train and Evaluate the Model\n",
    "- The `evaluate_random_forest()` function is used to train a `RandomForestClassifier` on only the top 5 most important features.\n",
    "- Performance metrics such as accuracy, precision, and F1-score are recorded for different values of `n_trees`.\n",
    "\n",
    "### 2. Plot Accuracy vs. Number of Trees\n",
    "- A line plot is created to visualize the effect of `n_trees` on model accuracy.\n",
    "- The x-axis represents the number of trees in the forest.\n",
    "- The y-axis represents the mean accuracy percentage.\n",
    "- The plot uses green markers (`'o'`) and a solid line (`'-'`) to indicate accuracy when using only the top 5 features.\n",
    "\n",
    "### 3. Display the Results\n",
    "- The grid is enabled for better readability.\n",
    "- A legend is added to differentiate accuracy trends.\n",
    "- The title of the plot is set to \"Effect of n_trees on Accuracy (Top 5 Features).\"\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "ae67af3f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-07T15:21:43.364001Z",
     "iopub.status.busy": "2025-04-07T15:21:43.363615Z",
     "iopub.status.idle": "2025-04-07T15:21:43.368389Z",
     "shell.execute_reply": "2025-04-07T15:21:43.367557Z"
    },
    "papermill": {
     "duration": 0.032984,
     "end_time": "2025-04-07T15:21:43.369638",
     "exception": false,
     "start_time": "2025-04-07T15:21:43.336654",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Running Random Forest on Top 5 Features...\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nRunning Random Forest on Top 5 Features...\\n\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c484684d",
   "metadata": {
    "papermill": {
     "duration": 0.021695,
     "end_time": "2025-04-07T15:21:43.420585",
     "exception": false,
     "start_time": "2025-04-07T15:21:43.398890",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Confusion Matrix Analysis\n",
    "\n",
    "### 1. Compute Confusion Matrices\n",
    "- The confusion matrices for both the full dataset and the top 5 feature dataset are generated using `confusion_matrix()`.\n",
    "- `best_y_true` and `best_y_pred` are used for the full dataset.\n",
    "- `best_y_true_top` and `best_y_pred_top` are used for the top 5 feature dataset.\n",
    "\n",
    "### 2. Visualizing Confusion Matrices\n",
    "- The first heatmap represents the confusion matrix for the full dataset.\n",
    "- The second heatmap represents the confusion matrix for the top 5 features dataset.\n",
    "\n",
    "\n",
    "### 3. Interpretation\n",
    "- Higher diagonal values indicate better classification performance.\n",
    "- Off-diagonal values represent misclassifications.\n",
    "- Comparing both confusion matrices helps assess if using only the top 5 features impacts model performance.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cbe09b56",
   "metadata": {
    "papermill": {
     "duration": 0.021383,
     "end_time": "2025-04-07T15:21:43.463552",
     "exception": false,
     "start_time": "2025-04-07T15:21:43.442169",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0fcc4b38",
   "metadata": {
    "papermill": {
     "duration": 0.026617,
     "end_time": "2025-04-07T15:21:43.510676",
     "exception": false,
     "start_time": "2025-04-07T15:21:43.484059",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "\n",
    "\n",
    "Q1: How does the custom Random Forest implementation compare to the Scikit-learn Random Forest in terms of accuracy and performance?\n",
    "\n",
    "\n",
    "Answer:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8271b38b",
   "metadata": {
    "papermill": {
     "duration": 0.021409,
     "end_time": "2025-04-07T15:21:43.559896",
     "exception": false,
     "start_time": "2025-04-07T15:21:43.538487",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 🎉 Well Done! 🎉\n",
    "You've successfully built, evaluated, and visualized a Random Forest model. Proud of you, keep up the great work!"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "datasetId": 7041747,
     "sourceId": 11265582,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30918,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 35.29097,
   "end_time": "2025-04-07T15:21:44.100221",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-04-07T15:21:08.809251",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
