{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":11265582,"sourceType":"datasetVersion","datasetId":7041747}],"dockerImageVersionId":30918,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":5,"nbformat":4,"cells":[{"id":"c1fb7c71-1307-417c-92bf-6ef60e9b16c8","cell_type":"markdown","source":" <center>\n\n# **PA3:  SVM And Classification Using Random Forests**\n\n### **Total : 200 marks**\n\n</center>\n\n**Group Number:**\n\nName: Baqir Hassan\n\nRoll Number: 27100340\n\nName: Sameen Abid\n\nRoll Number:\n","metadata":{}},{"id":"7e3da1b2-329b-49d0-a9f4-60212dab7fbe","cell_type":"markdown","source":"## Instructions\n\n- Follow along with the notebook, filling out the necessary code where instructed.\n\n- <span style=\"color: red;\">Make sure to run all cells for credit.</span>\n\n- <span style=\"color: red;\">Do not remove any pre-written code (unless explicitly mentioned in the cell that you are allowed to do so).</span>\n\n- <span style=\"color: red;\">You must attempt all parts.</span>\n\n## Submission Guidelines\n\nYou are to submit a zip file containing the following files:\n\n1. This juptyer notebook. `Group<group_number>_S<section_number>_PA3.ipynb`\n2. Python file of the juptyer notebook. `Group<group_number>_S<section_number>_PA3.py`\n\nFor example if I am from S1 and my group number is 25, my files would be named `Group25_S1_PA3.ipynb` and `Group25_S1_PA3.py`\n\nIMPORTANT: **Do not zip the files.** Submit both the files seperately, without zipping them.\n","metadata":{}},{"id":"c296577b-3287-47b8-a4c9-bd364a58ffe0","cell_type":"markdown","source":"# Part 1:IMPLEMENTING SVM FROM SCRATCH  (100 marks)\n\nYou are <span style=\"color: red;\">not allowed</span> to use scikit-learn or any other machine learning toolkit for this part. You have to implement your own SVM classifier from scratch.\n\n### Importing Libraries\n\nAll of the necessary libraries for this part have been imported for you below. You may not use any other library apart from standard Python librares.\n","metadata":{}},{"id":"515363aa-d28f-4465-9fbe-72228e262c41","cell_type":"code","source":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import make_moons\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-03T16:54:55.274877Z","iopub.execute_input":"2025-04-03T16:54:55.275290Z","iopub.status.idle":"2025-04-03T16:54:55.280340Z","shell.execute_reply.started":"2025-04-03T16:54:55.275259Z","shell.execute_reply":"2025-04-03T16:54:55.279315Z"}},"outputs":[],"execution_count":23},{"id":"edcd71e0-672c-4059-b4bc-3bc169e92eb8","cell_type":"markdown","source":"### Task 1.1: VISUALISING THE DATA SET \n\nFor this part of the assignment, you have already been provided with a linearly separable dataset.\n\nIt has also been plotted for you.\n\nCarefully analyze it and use it in the next part.","metadata":{}},{"id":"919df576-1f4b-4caf-b8d1-e89b0cfeb0fc","cell_type":"code","source":"from sklearn.datasets import make_blobs\n\nX, y = make_blobs(n_samples=200, centers=2, random_state=42, cluster_std=1)\n\ny = np.where(y == 0, -1, 1)\n\nscaler = StandardScaler()\nX = scaler.fit_transform(X)\n\nplt.figure(figsize=(8,6))\nplt.scatter(X[:, 0], X[:, 1], c=y, cmap='bwr', edgecolors='k')\nplt.xlabel('Feature 1')\nplt.ylabel('Feature 2')\nplt.title('Linearly Separable Data')\nplt.show()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-03T16:54:58.149338Z","iopub.execute_input":"2025-04-03T16:54:58.149846Z","iopub.status.idle":"2025-04-03T16:54:58.374540Z","shell.execute_reply.started":"2025-04-03T16:54:58.149808Z","shell.execute_reply":"2025-04-03T16:54:58.373463Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":24},{"id":"fe0fe4a7-7c44-46da-a58f-d4cefc3e95f6","cell_type":"markdown","source":"\"\"\"\n## Task 1.2: Implementing an SVM Classifier from Scratch   (40 marks)\n\nNow you will create your own **Support Vector Machine (SVM) classifier** by implementing the following functions:  \n\n---\n\n### **Step 1: Understanding SVM**\n- **Support Vector Machines (SVMs)** are supervised learning models used for binary classification.\n- The model finds a **hyperplane** that best separates two classes.\n- If the data is **not linearly separable**, a **kernel trick** is applied to project it into a higher-dimensional space.\n\n---\n\n### **Step 2: Implementing Key Functions**\n\n#### 1. `fit(self, X, y)`\n📌 **Objective:** Train the SVM model using a **gradient-based approach**.  \n\n💡 **Implementation Guide:**  \n- Initialize the **weight vector** (`w`) and **bias** (`b`) to zeros.  \n- Iterate over the dataset for `n_iters` times.  \n- For each sample, check if it violates the **margin condition**:  \n- **TODO:** Implement weight and bias updates in the `fit` function.\n\n---\n\n#### 2. `predict(self, X)`\n📌 **Objective:** Predict class labels for the given test dataset.\n\n💡 **Implementation Guide:**  \n- Compute the **decision function**:\n  \\[\n  f(x) = w.x + b\n  \\]\n- Assign a **label** based on the sign of `f(x)`:  \n  - If `f(x) > 0`, predict `+1`\n  - If `f(x) < 0`, predict `-1`\n- **TODO:** Implement the decision function using numpy operations.\n\n---\n\n#### 3. `evaluate(self, X, y)`\n📌 **Objective:** Evaluate the model on a test set and return accuracy.\n\n","metadata":{}},{"id":"fdba1b06-99d8-4a83-a3b0-fe9a0090cd1e","cell_type":"code","source":"class SVM:\n    def __init__(self, learning_rate=0.001, n_iters=1000, lp=0.01):\n        '''\n          Initializes the class with learning rate and number of iterations.\n        '''\n        self.lr = learning_rate\n        self.n_iters = n_iters\n        self.w = None\n        self.b = 0\n        self.lagrange = lp\n\n    def fit(self, X, y):\n        '''\n          Trains the SVM model using a simple gradient-based approach.\n\n          Steps:\n          1. Initialize the weight vector `w` and bias `b` to zeros.\n          2. Iterate over the dataset for the given number of iterations.\n          3. For each sample, check if it is misclassified:\n             - If misclassified, update `w` and `b` based on the learning rate.\n          \n          TODO: Implement the weight and bias updates based on the hinge loss condition.\n        '''\n        n_samples, n_features = X.shape\n        self.w = np.zeros(n_features)\n        self.b = 0\n\n        for nothing in range(self.n_iters):\n            for it, x_i in enumerate(X):\n                learn_cond = y[it] * (np.dot(x_i, self.w) - self.b) >= 1\n                if not learn_cond:\n                    self.w -= self.lr * (2 * self.lagrange * self.w - y[it] * x_i)\n                    self.b -= self.lr * y[it]\n                else:\n                    self.w -= self.lr * (2 * self.lagrange * self.w)\n\n    def predict(self, X):\n        '''\n          Predicts the labels for a given test dataset.\n\n          Steps:\n          1. Compute the decision function: `y_hat = sign(X @ w + b)`\n          2. Return the predicted labels.\n\n          TODO: Implement the decision function using numpy operations.\n        '''\n        y_pred_soft = np.dot(X, self.w) - self.b\n        return np.sign(y_pred_soft)\n\n    def evaluate(self, X, y):\n        '''\n          Evaluates the model on the test set and returns accuracy.\n\n          Steps:\n          1. Use the `predict` function to get predictions.\n          2. Compare predictions with actual labels.\n          3. Compute accuracy as the fraction of correct predictions.\n\n          TODO: Implement the accuracy calculation.\n        '''\n        y_hat = self.predict(X)\n        accuracy = self.my_accuracy(y, y_hat)\n        return accuracy\n\n# helper\n    def my_accuracy(self, y_true, y_pred):\n            correct = np.sum(y_true == y_pred)\n            total = len(y_true)\n            return correct / total if total > 0 else 0","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-03T16:55:01.877043Z","iopub.execute_input":"2025-04-03T16:55:01.877379Z","iopub.status.idle":"2025-04-03T16:55:01.886534Z","shell.execute_reply.started":"2025-04-03T16:55:01.877354Z","shell.execute_reply":"2025-04-03T16:55:01.885343Z"}},"outputs":[],"execution_count":25},{"id":"886963dc-fdf0-421b-8d5e-00ca4242d38b","cell_type":"markdown","source":"## Task 1.3: Evaluation\n**Run the cell below to observe your evaluation.**\n\n**Hint:This is a perfectly lineraly seperable data**","metadata":{}},{"id":"f52f3106-daa7-405b-a76e-039e9ccd6a02","cell_type":"code","source":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=123)\nsvm = SVM(learning_rate=0.001, n_iters=1000, lp=0.01)\nsvm.fit(X_train, y_train)\naccuracy = svm.evaluate(X_test, y_test)\nprint(\"Accuracy:\", accuracy)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-03T16:55:06.219068Z","iopub.execute_input":"2025-04-03T16:55:06.219394Z","iopub.status.idle":"2025-04-03T16:55:07.175563Z","shell.execute_reply.started":"2025-04-03T16:55:06.219369Z","shell.execute_reply":"2025-04-03T16:55:07.174629Z"}},"outputs":[{"name":"stdout","text":"Accuracy: 1.0\n","output_type":"stream"}],"execution_count":26},{"id":"1fc3c68e-43da-4172-b90c-ef5c19f78a41","cell_type":"markdown","source":"## Task 1.4: Plot the decision Boundary\n**TODO: define the  plot_decision_boundary(svm, X, y) function\n below to observe the descision boundary**","metadata":{}},{"id":"8735c0e2-72b2-4f16-83c8-aaa4747a4863","cell_type":"code","source":"def plot_decision_boundary(svm, X, y):\n    x1_min = min(X[:, 0]) - 1\n    x1_max = max(X[:, 0]) + 1\n    \n\n    w1 = svm.w[0] \n    w2 = svm.w[1] \n    b = svm.b  \n    \n    x1_points = [x1_min, x1_max]\n    x2_points = []\n    x2_margin_plus = []\n    x2_margin_minus = []\n    \n    for x1 in x1_points:\n        if w2 != 0:  \n            x2 = (b - w1 * x1) / w2\n            x2_points.append(x2)\n            x2_plus = (b + 1 - w1 * x1) / w2\n            x2_margin_plus.append(x2_plus)\n            x2_minus = (b - 1 - w1 * x1) / w2\n            x2_margin_minus.append(x2_minus)\n        else:\n            x2_margin_plus.append(0)\n            x2_margin_minus.append(0)\n    \n    plt.figure(figsize=(8, 6))\n    \n    plt.plot(x1_points, x2_points, 'k-', label='Decision Boundary')\n    plt.plot(x1_points, x2_margin_plus, 'r--', label='Margin +1')\n    plt.plot(x1_points, x2_margin_minus, 'b--', label='Margin -1')\n    x1_class1, x2_class1 = [], []\n    x1_class2, x2_class2 = [], []\n    for i in range(len(X)):\n        if y[i] == 1:\n            x1_class1.append(X[i, 0])\n            x2_class1.append(X[i, 1])\n        else:\n            x1_class2.append(X[i, 0])\n            x2_class2.append(X[i, 1])\n    \n    plt.scatter(x1_class1, x2_class1, c='red', edgecolors='k', label='Class 1')\n    plt.scatter(x1_class2, x2_class2, c='blue', edgecolors='k', label='Class -1')\n    plt.xlabel('Feature 1')\n    plt.ylabel('Feature 2')\n    plt.title('SVM Decision Boundary')\n    plt.legend()\n    plt.show()\n\n\nplot_decision_boundary(svm, X, y)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-03T17:04:34.226184Z","iopub.execute_input":"2025-04-03T17:04:34.226633Z","iopub.status.idle":"2025-04-03T17:04:34.582566Z","shell.execute_reply.started":"2025-04-03T17:04:34.226598Z","shell.execute_reply":"2025-04-03T17:04:34.581566Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":31},{"id":"726fd741-f315-4861-bd1c-662b606eb472","cell_type":"markdown","source":"## TASK 2 : MULTI-CLASS SVM (30 marks)","metadata":{}},{"id":"f6e8dcbd-d03d-4641-ba76-3595ef700e2a","cell_type":"markdown","source":"### TASK 2.1: VISUALISE THE MULTI-CLASS DATASET\n**You have been provided the muticlass dataset below which you will classify in the next part**","metadata":{}},{"id":"701f7b33-9f4d-4d4f-95d3-18cd29c69394","cell_type":"code","source":"\nX_multi, y_multi = make_blobs(n_samples=300, centers=3, random_state=42, cluster_std=1.5)\n\ny_multi = y_multi.astype(int) \n\nplt.figure(figsize=(8, 6))\nplt.scatter(X_multi[:, 0], X_multi[:, 1], c=y_multi, cmap='viridis', edgecolors='k', alpha=0.7)\nplt.title(\"Multiclass Dataset (make_blobs)\")\nplt.xlabel(\"Feature 1\")\nplt.ylabel(\"Feature 2\")\nplt.colorbar(label=\"Class Label\")\nplt.show()\n","metadata":{},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 800x600 with 2 Axes>"]},"metadata":{},"output_type":"display_data"}],"execution_count":null},{"id":"6c32fcce-8470-41ac-85ef-c45714a1c376","cell_type":"markdown","source":"## **Task 2.2: Modify SVM for Multi-Class Classification (One-vs-All)**\nIn this section, we will extend our binary SVM to handle **multi-class classification** using the **One-vs-All (OvA)** approach.\n\n---\n\n### **Approach: One-vs-All (OvA)**\nInstead of a single SVM, we train **C binary SVM models**, where **C** is the number of unique classes in the dataset.\n\nFor each class \\( c \\):\n1. Convert the labels into a **binary problem**:\n   - Assign **+1** to samples belonging to class \\( c \\).\n   - Assign **-1** to all other samples.\n2. Train a **separate binary SVM** using this modified dataset.\n\nOnce all SVMs are trained, we make predictions by selecting the class with the **highest decision score**.\n\n---\n\n### **Why Use Softmax?**\nBy default, multi-class SVM predicts the class with the **highest raw score**. However, these scores are **not probabilities**, making it hard to interpret confidence.  \n\nTo address this, we apply the **Softmax function** to convert decision scores into probabilities:\n\n$$\nP(y = c \\mid X) = \\frac{e^{s_c}}{\\sum_{j=1}^{C} e^{s_j}}\n$$\n\nwhere:\n- \\( s_c \\) is the decision score for class \\( c \\).\n- \\( C \\) is the number of classes.\n- The denominator ensures probabilities sum to 1.\n\n---\n\n### **Function Breakdown**\nBelow are the key functions you will implement:\n\n#### **`softmax(scores)`**\n- **Purpose**: Converts raw decision scores into probability distributions.\n- **Steps**:\n  1. Subtract the maximum score (stability trick).\n  2. Apply the **exponential function**.\n  3. Normalize by dividing by the sum of exponentials.\n\n---\n\n#### **`train_multiclass_svm(X, y, learning_rate=0.01, n_iters=1000)`**\n- **Purpose**: Trains multiple binary SVM classifiers using **One-vs-All (OvA)**.\n- **Steps**:\n  1. Identify the unique **classes** in `y`.\n  2. For each class:\n     - Convert labels to **binary** (`+1` for current class, `-1` for others).\n     - Train a **binary SVM** using the `fit` function.\n  3. Store the trained **SVM models**.\n\n---\n\n#### **`predict_multiclass_svm_softmax(X, classifiers, classes)`**\n- **Purpose**: Uses trained SVM models to predict class probabilities.\n- **Steps**:\n  1. Compute **decision scores** from all trained SVMs.\n  2. Apply the **Softmax function** to obtain class probabilities.\n  3. Return the class with the **highest probability**.\n\n---\n\n#### **`evaluate_multiclass_svm_softmax(X, y, classifiers, classes)`**\n- **Purpose**: Evaluates the performance of the multi-class SVM.\n- **Steps**:\n  1. Use `predict_multiclass_svm_softmax` to get class predictions.\n  2. Compare predictions with true labels `y`.\n  3. Compute **accuracy** as the fraction of correct predictions.\n","metadata":{}},{"id":"2a8ff035-fbb4-4289-ac09-d1d34645db79","cell_type":"code","source":"\ndef softmax(scores):\n    \"\"\"\n    Compute the softmax probabilities from raw decision scores.\n\n    Args:\n    - scores: Array of shape (num_samples, num_classes) containing decision scores.\n\n    Returns:\n    - probabilities: Softmax probabilities of shape (num_samples, num_classes).\n    \"\"\"\n    \n\ndef train_multiclass_svm(X, y, learning_rate=0.01, n_iters=1000):\n    \"\"\"\n    Train multiple binary SVM classifiers using One-vs-All (OvA).\n    \"\"\"\n    classes = np.unique(y)\n    classifiers = {}\n\n    \n    return classifiers, classes\n\ndef predict_multiclass_svm_softmax(X, classifiers, classes):\n    \"\"\"\n    Predict class probabilities using Softmax over SVM decision scores.\n    \"\"\"\n    \n\ndef evaluate_multiclass_svm_softmax(X, y, classifiers, classes):\n    \"\"\"\n    Evaluate multi-class SVM using Softmax-based predictions.\n    \"\"\"\n    \n\n","metadata":{},"outputs":[],"execution_count":null},{"id":"67b2b8b0-0f60-46d4-a73e-339647b88961","cell_type":"markdown","source":"## TASK 2.3: Evaluation and Visualisation\n\n**TODO:evaluate the model on the given dataset**\n\n**TODO: Plot the descision boundary showing the three classes and the boundaries**","metadata":{}},{"id":"0c3bd67e-f45b-414b-bb79-8b5ff2994c71","cell_type":"code","source":"## your code here ","metadata":{},"outputs":[],"execution_count":null},{"id":"9a9366be-4272-435c-b70f-b21f26fd46e4","cell_type":"markdown","source":"## Task 3: KERNALIZED SVM (30 marks)\n\n\n\n","metadata":{}},{"id":"2956aebb-73e8-4631-949b-3375af47af27","cell_type":"markdown","source":"## TASK 3.1:\n\n**Now we will be working with a non linearly seperable dataset**\n\n**You have already been provided the dataset below**","metadata":{}},{"id":"ef0fd6a3-0956-4452-83c4-c002b4b9233b","cell_type":"code","source":"from sklearn.datasets import make_circles\n\nX_circles, y_circles = make_circles(n_samples=200, noise=0.05, factor=0.5, random_state=42)\n\ny_circles = np.where(y_circles == 0, -1, 1)\n\nplt.scatter(X_circles[:, 0], X_circles[:, 1], c=y_circles, cmap=plt.cm.coolwarm, edgecolors=\"k\")\nplt.xlabel(\"Feature 1\")\nplt.ylabel(\"Feature 2\")\nplt.title(\"Non-Linearly Separable Dataset (Circles)\")\nplt.show()\n","metadata":{},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"execution_count":null},{"id":"fcce5924-0385-4c34-a658-ef1381034099","cell_type":"markdown","source":"## TASK 3.2: Evaluating the Linear SVM on non linear data\n\n**Before we start implenting the kernalised SVM we should see the inution behind it**\n\n**To motivate this we will use our vanilla linear classifier that we made in task 1.2 to form the descion boundary**\n\n**TODO: Evaluate your model from part 1.2 on this circles dataset**\n","metadata":{}},{"id":"44fa5903-b54a-4a41-966f-fea60660fb5a","cell_type":"code","source":"## return the accuracy","metadata":{},"outputs":[],"execution_count":null},{"id":"5fc1acd7-b7ea-437a-bf8c-8105cc30d7f5","cell_type":"markdown","source":"## TASK 3.3: **Kernelized SVM Implementation**  \n\nThis class implements **Kernelized Support Vector Machine (SVM)** for classification tasks. It extends traditional SVM by using **kernel functions**, allowing it to handle **non-linearly separable data**.  \n\n---\n\n#### **1. Class Overview**  \n\n- **`__init__`**: Initializes hyperparameters like learning rate, regularization (`lambda`), number of iterations, and kernel type.  \n- **`polynomial_kernel(X, Y)`**: Computes the **polynomial kernel** using:  \n  $$K(x, y) = (x \\cdot y + 1)^{\\text{degree}}$$  \n- **`compute_kernel(X, Y)`**: Selects and applies the appropriate kernel function to input data.  \n\n---\n\n#### **2. Training the Model (`fit`)**  \n\nThe **dual optimization problem** for SVM is solved using **gradient-based updates**:  \n\n1. **Initialize** Lagrange multipliers `alpha` and bias `b` to zero.  \n2. **Compute the kernel matrix**:  \n   $$K(x_i, x_j)$$  \n3. **Iterate** over the dataset for `n_iters`:  \n   - Check the **margin condition**:  \n     $$y_i \\cdot f(x_i) < 1$$  \n   - If true, update `alpha` and `b`:  \n     $$\\alpha_i \\leftarrow \\alpha_i + \\eta \\cdot (1 - y_i \\sum \\alpha_j y_j K(x_j, x_i))$$  \n     $$b \\leftarrow b + \\eta \\cdot y_i$$  \n4. Repeat until convergence.  \n\n---\n\n#### **3. Making Predictions (`predict`)**  \n\nAfter training, predictions are made using:  \n\n$$f(x) = \\sum (\\alpha_i y_i K(x_i, x)) + b$$  \n\nThe final prediction is determined by the **sign** of \\( f(x) \\):  \n\n$$\\hat{y} = \\text{sign}(f(x))$$  \n\n---\n\n#### **4. Evaluation (`evaluate`)**  \n\nThis function compares the predicted labels with actual labels and returns the **accuracy** of the model.  \n\n---\n\nNow, implement the **KernelSVM** class below. 🚀  \n","metadata":{}},{"id":"6100407b-80e0-4ae0-80e7-4d862a47bf7a","cell_type":"code","source":"\nclass KernelSVM:\n    def __init__(self, learning_rate=0.01, lambda_param=0.001, n_iters=1000, kernel=\"linear\", degree=3, gamma=0.5, custom_kernel=None):\n        self.lr = learning_rate\n        self.lambda_param = lambda_param\n        self.n_iters = n_iters\n        self.kernel = kernel\n        self.custom_kernel = custom_kernel  \n        self.alpha = None\n        self.b = None\n        self.X_train = None\n        self.y_train = None\n\n    def linear_kernel(self, X, Y):\n        pass  \n\n    def polynomial_kernel(self, X, Y):\n        pass  \n\n    def compute_kernel(self, X, Y):\n        pass  \n\n    def fit(self, X, y):\n        pass  \n\n    def predict(self, X):\n        pass  \n\n    def evaluate(self, X, y):\n        pass  \n","metadata":{},"outputs":[],"execution_count":null},{"id":"2ca3c7c4-e9f7-4980-a368-e3329ff1d80b","cell_type":"markdown","source":"## TASK 3.4: Evaluation and Visualising\n**Now you will evaluate your model above(return the accuracy on the circles dataset)**\n\n**Plot the descision boundary showing how your model performs on the circles dataset**\n","metadata":{}},{"id":"a59eb3eb-3ef2-4970-b441-7b17e74c3dbd","cell_type":"code","source":"\"\"\"\nTODO: evaluate the model and return the accuracy\n\"\"\"\n\n\"\"\"\nTODO: plot the descion boundary\n\"\"\"","metadata":{},"outputs":[],"execution_count":null},{"id":"321bb9c5-d1e4-4d5f-bddd-51937854fdc6","cell_type":"markdown","source":"","metadata":{}},{"id":"1e3ed9ff-ef4c-49ec-9c01-e024294c6c21","cell_type":"markdown","source":"# **Random Forest Classifier**\n","metadata":{}},{"id":"5ab35081-f849-4b2c-bffc-07edc3bcd9ca","cell_type":"markdown","source":"# 🌲 **Understanding Random Forests: A Powerful Classification Algorithm**\n\n## 🔍 **What is Random Forest?**\nRandom Forest is an ensemble learning method that constructs multiple decision trees during training and merges their outputs for better accuracy and stability. It reduces overfitting by averaging predictions from multiple trees.\n\n## 🛠 **How Does Random Forest Work?**\n1. **Bootstrap Sampling**: It randomly selects subsets of data for each tree.\n2. **Feature Selection**: At each split, it selects the best among randomly chosen features.\n3. **Tree Construction**: Each decision tree is grown independently.\n4. **Prediction Aggregation**: For classification, it takes the majority vote from all trees.\n\n## 🎯 **Why Use Random Forest?**\n✅ Handles missing values well.  \n✅ Works well with large datasets.  \n✅ Reduces overfitting by combining multiple trees.  \n✅ Can handle both classification and regression tasks.  \n\nLet's implement it step by step! 🚀","metadata":{}},{"id":"1745b667-64ea-4321-8194-396af67335a2","cell_type":"markdown","source":"![Image Description](https://i.ytimg.com/vi/goPiwckWE9M/maxresdefault.jpg)\n","metadata":{}},{"id":"66aaac4d-f13c-491a-87c2-994aec7a5829","cell_type":"markdown","source":"## 🏗 **Implementation Guidance**  \n- We will start by implementing decision trees.  \n- Then, we will build a random forest by combining multiple trees.  \n- Finally, we will compare our model with `sklearn`'s RandomForestClassifier.  \n","metadata":{}},{"id":"f5b985bc-7273-4e42-bc9e-b5c0fc55b0d9","cell_type":"markdown","source":"# Part 2.1: Random Forest classification from Scratch (70 marks)\n\nYou are <span style=\"color: red;\">not allowed</span> to use scikit-learn or any other machine learning toolkit for this part. You have to implement your own random forest classifier from scratch.\n\n## **Importing Libraries**\n\nAll of the necessary libraries for this part have been imported for you below. You may not use any other library apart from standard Python librares.\n","metadata":{}},{"id":"4abd9b0a-832f-4c0b-b91a-7dbccc8e356b","cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix, ConfusionMatrixDisplay\nimport matplotlib.pyplot as plt\n\n\n","metadata":{"execution":{"iopub.execute_input":"2025-03-17T00:44:36.267439Z","iopub.status.busy":"2025-03-17T00:44:36.267125Z","iopub.status.idle":"2025-03-17T00:44:36.271767Z","shell.execute_reply":"2025-03-17T00:44:36.270955Z","shell.execute_reply.started":"2025-03-17T00:44:36.267417Z"}},"outputs":[],"execution_count":29},{"id":"0f2b083b-b748-49f1-8996-dbb11d7a7e25","cell_type":"markdown","source":"# **Loading a CSV Dataset into a Pandas DataFrame**\n\n\n\n## We will be using the data.csv dataset provided for the Part2 of the assignment.\n\n## **Overview**\nTo analyze and process data, we first need to load it into a **Pandas DataFrame**. This function helps in efficiently reading a CSV file and storing it in a structured format.\n\n## **Function: `load_csv(filename)`**\nThis function reads a CSV file and loads it into a Pandas **DataFrame**.\n\n### **Implementation Details**\n- Uses `pd.read_csv()` to load the dataset from the specified file path.\n- Returns the loaded DataFrame, which can then be explored and used for further processing.\n\n\n\n","metadata":{}},{"id":"090f29b5-e369-4223-a051-4e5fdede84cb","cell_type":"code","source":"def load_csv(filename):\n    \"\"\"\n    Loads a CSV file into a Pandas DataFrame.\n    \n    Parameters:\n    filename (str): The name or path of the CSV file to be loaded.\n    \n    Returns:\n    pd.DataFrame: A DataFrame containing the dataset.\n    \"\"\"\n    pass   # Replace this with your implementation\n\ndataset = None","metadata":{"execution":{"iopub.execute_input":"2025-03-16T23:39:25.795893Z","iopub.status.busy":"2025-03-16T23:39:25.795587Z","iopub.status.idle":"2025-03-16T23:39:25.818203Z","shell.execute_reply":"2025-03-16T23:39:25.817176Z","shell.execute_reply.started":"2025-03-16T23:39:25.795870Z"}},"outputs":[],"execution_count":1},{"id":"44ca169c-d15a-4de2-811b-37df4f00ee15","cell_type":"markdown","source":"# **Label Encoding for Binary Classification**\n\n## **Overview**\nBefore training the model, categorical labels in the dataset need to be converted into numerical values. This process, known as **label encoding**, is essential for machine learning models that require numerical inputs.\n\n## **Function: `encode_label_column(df)`**\nThis function encodes the `\"class\"` column with binary values (0 and 1) based on the unique class labels.\n\n### **Implementation Details**\n- Identifies the unique class labels in the `\"class\"` column.\n- Maps the first unique value to `0` and the second unique value to `1`.\n- Modifies the original DataFrame by replacing the categorical labels with numerical values.\n\n","metadata":{}},{"id":"3b7cf927-274d-453f-8596-481689f8cf57","cell_type":"code","source":"def encode_label_column(df):\n    \"\"\"\n    Encodes the 'label' column with binary values (0 and 1).\n\n    Parameters:\n    df (pd.DataFrame): The DataFrame containing the 'Label' column.\n\n    Returns:\n    pd.DataFrame: The modified DataFrame with the 'Label' column encoded as 0 and 1.\n    \"\"\"\n    pass # Replace this with your implementation\n\ndf = encode_label_column(dataset)\n\n# display the dataframe using df.head()\n\n\n","metadata":{"execution":{"iopub.execute_input":"2025-03-16T23:39:25.819906Z","iopub.status.busy":"2025-03-16T23:39:25.819592Z","iopub.status.idle":"2025-03-16T23:39:25.831950Z","shell.execute_reply":"2025-03-16T23:39:25.830887Z","shell.execute_reply.started":"2025-03-16T23:39:25.819879Z"}},"outputs":[],"execution_count":null},{"id":"52b36316-4804-4831-93bf-bf8d0474b266","cell_type":"markdown","source":"# **Random Forest Classifier from Scratch**\n\n## **Overview**\nThis section implements a Random Forest classifier from scratch using decision trees. The model is designed for classification tasks and supports:\n- **Bootstrap Sampling**: Randomly selecting subsets of data for each tree.\n- **Feature Subsampling**: Using a random subset of features for each split.\n- **Gini Index for Splitting**: Measuring impurity to determine the best split.\n- **Bagging for Prediction**: Aggregating predictions from multiple decision trees.\n- **Cross-Validation**: Evaluating the model with k-fold cross-validation.\n- **Feature Importance Calculation**: Determining the most influential features.\n\n## **Implementation Details**\n### **1. Model Initialization**\n- `max_depth`: Maximum depth of each decision tree.\n- `min_size`: Minimum number of samples required to split a node.\n- `sample_size`: Percentage of the dataset used to train each tree.\n- `n_trees`: Number of decision trees in the forest.\n- `n_features`: Number of features considered for splitting at each node.\n- `random_state`: Ensures reproducibility.\n\n### **2. Core Functions**\n### The following decision tree construction functions have been provided. Do NOT change these.\n#### **Decision Tree Construction**\n- `test_split(index, value, dataset)`: Splits data into left and right subsets based on a feature and threshold.\n- `gini_index(groups, classes)`: Computes impurity to evaluate a split.\n- `get_split(dataset)`: Finds the best feature and value to split the data.\n- `split(node, depth)`: Recursively splits the dataset until stopping criteria are met.\n- `build_tree(train)`: Constructs a decision tree.\n- `predict(node, row)`: Traverses a decision tree to make a prediction.\n- `to_terminal(self, group)`: Creates a terminal node with the most common class value.\n\n### You need to implement the following functions.\n#### **Random Forest Training and Prediction**\n- `subsample(dataset)`: Creates a bootstrap sample of the dataset.\n- `fit(train)`: Trains multiple decision trees on random subsets.\n- `bagging_predict(row)`: Aggregates predictions from multiple trees.\n\n\n#### **Model Evaluation**\n- `cross_validation_split(dataset, n_folds)`: Splits data into `n_folds` for cross-validation.\n- `evaluate(dataset, n_folds)`: Runs k-fold cross-validation and computes accuracy.\n\n#### **Feature Importance Analysis**\n- `calculate_feature_importance(num_features)`: Computes feature importance based on split frequency.\n- `get_feature_importance(feature_names)`: Maps feature names to their importance scores.\n\n","metadata":{}},{"id":"c237423f-404d-412c-9efe-071473a6b3ba","cell_type":"code","source":"class RandomForest:\n    \"\"\"\n    Implements the Random Forest algorithm for classification.\n    \"\"\"\n    \n    def __init__(self, max_depth, min_size, sample_size, n_trees, n_features):\n        \"\"\"\n        Initializes the Random Forest model.\n\n        Parameters:\n        max_depth (int): Maximum depth of each decision tree.\n        min_size (int): Minimum size of a node before making it a leaf.\n        sample_size (float): Ratio of dataset to use for training each tree.\n        n_trees (int): Number of trees in the forest.\n        n_features (int): Number of features to consider for each split.\n        \"\"\"\n        self.max_depth = max_depth\n        self.min_size = min_size\n        self.sample_size = sample_size\n        self.n_trees = n_trees\n        self.n_features = n_features\n        self.trees = []\n        self.feature_importance = None\n        self.random_state=42\n        np.random.seed(self.random_state)\n\n    def test_split(self, index, value, dataset):\n        \"\"\"\n        Splits a dataset based on an attribute and its value.\n        \n        Parameters:\n        index (int): Index of the attribute to split on.\n        value (float): Value of the attribute to use as threshold.\n        dataset (DataFrame): The dataset to split.\n        \n        Returns:\n        left (DataFrame), right (DataFrame): Two subsets of the dataset.\n        \"\"\"\n        left = dataset[dataset.iloc[:, index] < value]\n        right = dataset[dataset.iloc[:, index] >= value]\n        return left, right\n    \n    def gini_index(self, groups, classes):\n        \"\"\"\n        Computes the Gini index for a given split.\n        \n        Parameters:\n        groups (tuple of DataFrames): The left and right groups after a split.\n        classes (list): Unique class labels in the dataset.\n        \n        Returns:\n        gini (float): The computed Gini index.\n        \"\"\"\n        n_instances = sum(len(group) for group in groups)\n        gini = 0.0\n        for group in groups:\n            size = len(group)\n            if size == 0:\n                continue\n            score = sum((sum(group.iloc[:, -1] == class_val) / size) ** 2 for class_val in classes)\n            gini += (1.0 - score) * (size / n_instances)\n        return gini\n    \n    def get_split(self, dataset):\n        \"\"\"\n        Finds the best attribute and value to split the dataset.\n        \n        Parameters:\n        dataset (DataFrame): The dataset to split.\n        \n        Returns:\n        dict: Contains index of best feature, best value, and resulting groups.\n        \"\"\"\n        class_values = dataset.iloc[:, -1].unique()\n        best_index, best_value, best_score, best_groups = None, None, float('inf'), None\n        features = np.random.choice(range(dataset.shape[1] - 1), self.n_features, replace=False)\n        for index in features:\n            for value in dataset.iloc[:, index].unique():\n                groups = self.test_split(index, value, dataset)\n                gini = self.gini_index(groups, class_values)\n                if gini < best_score:\n                    best_index, best_value, best_score, best_groups = index, value, gini, groups\n        return {'index': best_index, 'value': best_value, 'groups': best_groups}\n    \n    def to_terminal(self, group):\n        \"\"\"\n        Creates a terminal node with the most common class value.\n        \n        Parameters:\n        group (DataFrame): The dataset reaching the leaf node.\n        \n        Returns:\n        object: Most common class label.\n        \"\"\"\n        return group.iloc[:, -1].mode()[0]\n    \n    def split(self, node, depth):\n        \"\"\"\n        Recursively splits the tree until stopping conditions are met.\n        \n        Parameters:\n        node (dict): Current node containing split information.\n        depth (int): Current depth of the tree.\n        \"\"\"\n        left, right = node['groups']\n        del node['groups']\n        if left.empty or right.empty:\n            node['left'] = node['right'] = self.to_terminal(pd.concat([left, right]))\n            return\n        if depth >= self.max_depth:\n            node['left'], node['right'] = self.to_terminal(left), self.to_terminal(right)\n            return\n        for side, data in [('left', left), ('right', right)]:\n            if len(data) <= self.min_size:\n                node[side] = self.to_terminal(data)\n            else:\n                node[side] = self.get_split(data)\n                self.split(node[side], depth + 1)\n    \n    def build_tree(self, train):\n        \"\"\"\n        Builds a decision tree from training data.\n        \n        Parameters:\n        train (DataFrame): Training dataset.\n        \n        Returns:\n        dict: Root node of the decision tree.\n        \"\"\"\n        root = self.get_split(train)\n        self.split(root, 1)\n        return root\n    \n    def predict(self, node, row):\n        \"\"\"\n        Predicts class label for a given row.\n        \n        Parameters:\n        node (dict): Decision tree node.\n        row (Series): Single instance to classify.\n        \n        Returns:\n        object: Predicted class label.\n        \"\"\"\n        if row.iloc[node['index']] < node['value']:\n            return self.predict(node['left'], row) if isinstance(node['left'], dict) else node['left']\n        else:\n            return self.predict(node['right'], row) if isinstance(node['right'], dict) else node['right']\n    \n    def subsample(self, dataset):\n        \"\"\"\n        Creates a random subsample of the dataset.\n        \n        Parameters:\n        dataset (DataFrame): The dataset to sample from.\n        \n        Returns:\n        DataFrame: Random subsample.\n        \"\"\"\n        pass # Replace this with your implementation\n    \n    def fit(self, train):\n        \"\"\"\n        Trains multiple decision trees.\n        \n        Parameters:\n        train (DataFrame): Training dataset.\n        \"\"\"\n        pass # Replace this with your implementation\n    \n    def bagging_predict(self, row):\n        \"\"\"\n        Aggregates predictions from multiple trees.\n        \n        Parameters:\n        row (Series): Single instance to classify.\n        \n        Returns:\n        object: Final predicted class label.\n        \"\"\"\n        pass # Replace this with your implementation\n    \n    def cross_validation_split(self, dataset, n_folds):\n        \"\"\"\n        Splits dataset into k folds for cross-validation.\n        \n        Parameters:\n        dataset (DataFrame): Dataset to split.\n        n_folds (int): Number of folds.\n        \n        Returns:\n        list: List of DataFrame folds.\n        \"\"\"\n        pass # Replace this with your implementation\n    \n    def evaluate(self, dataset, n_folds):\n        \"\"\"\n        Evaluates the model using k-fold cross-validation.\n        \"\"\"\n        pass # Replace this with your implementation\n        \n    def calculate_feature_importance(self, num_features):\n        \"\"\"\n        Computes feature importance based on the number of times each feature \n        is used for splitting across all decision trees in the model.\n        \n        Parameters:\n        num_features (int): The total number of features in the dataset.\n        \n        Updates:\n        self.feature_importance (ndarray): A normalized array of feature importance scores.\n        \"\"\"\n        pass # Replace this with your implementation\n    \n    def get_feature_importance(self, feature_names):\n        \"\"\"\n        Returns a dictionary mapping feature names to their computed importance scores.\n        \n        Parameters:\n        feature_names (list of str): The names of the features.\n        \n        Returns:\n        dict: A dictionary where keys are feature names and values are their importance scores.\n        \"\"\"\n        pass # Replace this with your implementation   \n\n\n\n   \n","metadata":{"execution":{"iopub.execute_input":"2025-03-16T23:39:25.868564Z","iopub.status.busy":"2025-03-16T23:39:25.868189Z","iopub.status.idle":"2025-03-16T23:39:25.890289Z","shell.execute_reply":"2025-03-16T23:39:25.889089Z","shell.execute_reply.started":"2025-03-16T23:39:25.868532Z"}},"outputs":[],"execution_count":null},{"id":"fb85de29-1f14-4914-a765-09146241296d","cell_type":"markdown","source":"# **Hyperparameter Tuning: Number of Trees in Random Forest**\n\n## **Objective**\nIn this experiment, we evaluate the impact of varying the number of trees (`n_trees`) in a Random Forest classifier on model performance. The goal is to determine the optimal number of trees by comparing accuracy, precision, and F1-score.\n\n## **Steps to Follow**\n\n### **1. Initialize Parameters**\n- Define a list of values for `n_trees` (number of decision trees) to test.\n- Set fixed values for:\n  - `max_depth` = 10 (maximum depth of each decision tree).\n  - `min_size` = 1 (minimum samples per leaf node).\n  - `sample_size` = 0.8 (proportion of dataset samples used per tree).\n  - `n_features` = int((df.shape[1] - 1) ** 0.5) (number of features used per split, computed as \\(\\sqrt{\\text{total features}}\\)).\n  - `n_folds` = 5 (number of folds for cross-validation).\n\n### **2. Train and Evaluate Random Forest Model**\nFor each value of `n_trees`:\n1. **Initialize** a `RandomForest` instance with the given hyperparameters.\n2. **Perform cross-validation**:\n   - Train the model on different folds.\n   - Compute accuracy scores for each fold.\n3. **Compute Performance Metrics**:\n   - Calculate mean accuracy.\n   - Extract true labels (`y_true`) and predicted labels (`y_pred`) across all folds.\n   - Compute **precision** and **F1-score** using weighted averaging.\n4. **Store Results**:\n   - Append mean accuracy, precision, and F1-score to their respective lists.\n   - Update the best performing model based on accuracy.\n\n### **3. Select the Best Model**\n- Track the best value of `n_trees` that results in the highest mean accuracy.\n- Store the corresponding `y_true` and `y_pred` values for further analysis.\n\n## **Expected Output**\n- Fold-wise accuracy for each `n_trees` value.\n- Mean accuracy, precision, and F1-score.\n- The best `n_trees` based on accuracy.\n\n","metadata":{}},{"id":"4bf64130-db7d-4513-a420-f3a3935542c0","cell_type":"code","source":"tree_values = [1, 5, 10, 15, 20]\naccuracies = []\nprecisions = []\nf1_scores = []\nmax_depth = 10\nmin_size = 1\nsample_size = 0.8\nn_features = None # use int((df.shape[1] - 1) ** 0.5)  \nn_folds = 5 \n\nbest_n_trees = None\nbest_accuracy = 0\nbest_y_true = None\nbest_y_pred = None\n\nfor n_trees in tree_values:\n    pass # Replace this with your implementation\n","metadata":{"execution":{"iopub.execute_input":"2025-03-16T23:39:25.893179Z","iopub.status.busy":"2025-03-16T23:39:25.892780Z","iopub.status.idle":"2025-03-17T00:01:35.132867Z","shell.execute_reply":"2025-03-17T00:01:35.131947Z","shell.execute_reply.started":"2025-03-16T23:39:25.893149Z"}},"outputs":[],"execution_count":7},{"id":"5877ae1a-fb61-412d-9ac1-536c6340e36a","cell_type":"markdown","source":"# **Visualization: Impact of Number of Trees on Performance Metrics**\n\n## **Objective**\nThis section visualizes how the number of trees (`n_trees`) in the Random Forest model affects:\n- Mean Accuracy\n- Precision\n- F1 Score\n\n## **Plot Description**\n- We generate three subplots in a single row to compare the effect of `n_trees` on different metrics.\n- Each plot represents:\n  1. **Mean Accuracy vs. Number of Trees**\n  2. **Precision vs. Number of Trees**\n  3. **F1 Score vs. Number of Trees** \n","metadata":{}},{"id":"d5492a12-d1b9-4acb-8389-cd0e459a0ed8","cell_type":"code","source":"\n\n","metadata":{"execution":{"iopub.execute_input":"2025-03-17T00:01:35.134448Z","iopub.status.busy":"2025-03-17T00:01:35.134078Z","iopub.status.idle":"2025-03-17T00:01:35.751212Z","shell.execute_reply":"2025-03-17T00:01:35.750286Z","shell.execute_reply.started":"2025-03-17T00:01:35.134421Z"}},"outputs":[],"execution_count":null},{"id":"88790862-3a49-49fe-a45e-4cc55f5a8c55","cell_type":"markdown","source":"# **Confusion Matrix Visualization**\n\n## **Overview**\nA **confusion matrix** is a performance evaluation metric for classification models. It helps in understanding how well the model is classifying instances by displaying:\n- **True Positives (TP)**: Correctly predicted positive cases.\n- **True Negatives (TN)**: Correctly predicted negative cases.\n- **False Positives (FP)**: Incorrectly predicted positive cases.\n- **False Negatives (FN)**: Incorrectly predicted negative cases.\n\n## **Plotting the Confusion Matrix**\nWe use **Seaborn's heatmap** to visually represent the confusion matrix.\n\n### **Implementation Details**\n- Computes the confusion matrix using `confusion_matrix(y_true, y_pred)`.\n- Uses `sns.heatmap()` to plot the matrix with numerical annotations.\n\n","metadata":{}},{"id":"5c86f21d-4f69-46fa-a147-95c2b7ba0023","cell_type":"code","source":"","metadata":{"execution":{"iopub.execute_input":"2025-03-17T00:02:35.337510Z","iopub.status.busy":"2025-03-17T00:02:35.336967Z","iopub.status.idle":"2025-03-17T00:02:35.541580Z","shell.execute_reply":"2025-03-17T00:02:35.540524Z","shell.execute_reply.started":"2025-03-17T00:02:35.337479Z"}},"outputs":[],"execution_count":null},{"id":"62511757-8e70-4ef8-bf17-1014eceb1e07","cell_type":"markdown","source":"# **Feature Importance Calculation in Random Forest**\n\n## **Overview**\nFeature importance in a **Random Forest model** helps identify which features contribute the most to model predictions. The higher the importance score, the more influential the feature is in decision-making.\n\n## **Steps Involved**\n1. **Selecting the Best Number of Trees (`n_trees`)**  \n   - We choose the number of trees that resulted in the highest accuracy during training.\n   - Extracts the best value from `tree_values` based on the highest accuracy.\n\n2. **Training the Random Forest Model**\n   - Creates a new `RandomForest` instance with optimal parameters.\n   - Fits the model to the dataset.\n\n3. **Computing Feature Importance**\n   - Calls `calculate_feature_importance()`, which counts the number of times each feature is used for splitting.\n   - The importance values are normalized.\n\n4. **Identifying Top Features**\n   - The top **5 most important features** are extracted and sorted in descending order.\n   - The cumulative contribution of these top 5 features is calculated.\n\n\n","metadata":{}},{"id":"cd207220-edac-4a58-a86f-be195dc10572","cell_type":"code","source":"# Uncomment the commented print statements after your implementation\nbest_n_trees = None # Replace this with your implementation\n# print(f\" best number of trees: {best_n_trees}\")\n\n\ntotal_importance = None  # Replace this with your implementation\n# print(f\" total importance: {total_importance}\")\n\ntop_features = None # Replace this with your implementation\n\ncumulative_percentage = None # Replace this with your implementation\n# print(f\"\\nTotal Contribution of Top 5 Features: {cumulative_percentage:.2f}%\")\n","metadata":{"execution":{"iopub.execute_input":"2025-03-17T00:02:42.059678Z","iopub.status.busy":"2025-03-17T00:02:42.059350Z","iopub.status.idle":"2025-03-17T00:04:08.070491Z","shell.execute_reply":"2025-03-17T00:04:08.069562Z","shell.execute_reply.started":"2025-03-17T00:02:42.059653Z"}},"outputs":[],"execution_count":10},{"id":"4727fa99-789e-4d88-b2d4-821fcd9b131d","cell_type":"markdown","source":"# **Feature Importance Visualization in Random Forest**\n\n## **Overview**\nAfter computing feature importance in our **Random Forest model**, we visualize the **top contributing features** using a **horizontal bar plot**. This helps to understand which features have the most impact on predictions.\n\n---\n\n## **Steps Involved**\n1. **Create a DataFrame for Top Features**\n   - Extract the **top 5 features** and their importance scores.\n   - Store them in a Pandas DataFrame for easy plotting.\n\n\n2. **Visualize Feature Importance using a Bar Chart**\n   - A **Seaborn barplot** is used for clear visualization.\n   - The features are displayed on the **Y-axis** in descending order of importance.\n   - The corresponding importance scores are on the **X-axis**.\n\n\n","metadata":{}},{"id":"0b8da8fa-027c-418f-98ed-46781a5745b3","cell_type":"code","source":"importance_df = None # Replace this with your implementation","metadata":{"execution":{"iopub.execute_input":"2025-03-17T00:04:28.948887Z","iopub.status.busy":"2025-03-17T00:04:28.948541Z","iopub.status.idle":"2025-03-17T00:04:29.129147Z","shell.execute_reply":"2025-03-17T00:04:29.128408Z","shell.execute_reply.started":"2025-03-17T00:04:28.948861Z"}},"outputs":[],"execution_count":11},{"id":"7d95105f-7ccd-42f8-8c9c-419046130293","cell_type":"markdown","source":"# **Random Forest Evaluation on Top Features**\n\n## **Overview**\nAfter selecting the **top 5 most important features**, we train and evaluate a **Random Forest classifier** using only these features. The goal is to analyze whether reducing the feature set improves or maintains accuracy.\n\n---\n\n## **Steps Involved**\n1. **Select the Top Features**\n   - Extract the **top 5 most important features** based on feature importance.\n   - Add the **target column** to the dataset.\n\n2. **Run Random Forest on Reduced Feature Set**\n   - Iterate over different numbers of trees (`n_trees`).\n   - Perform **k-fold cross-validation** to evaluate the model.\n   - Compute **accuracy, precision, and F1 score** for each model.\n\n3. **Track the Best Model**\n   - Identify the `n_trees` value with the **best accuracy**.\n   - Store the corresponding **true and predicted labels** for evaluation.\n\n","metadata":{}},{"id":"acf9f6f0-8d3e-478b-bc64-a511bcdde7c7","cell_type":"code","source":"top_feature_names = None # Replace this with your implementation\n\ndf_top = None # Replace this with your implementation\n\naccuracies_top = []\nprecisions_top = []\nf1_scores_top = []\n\nn_features_top = None # use int((df_top.shape[1] - 1) ** 0.5)  \n\nprint(\"\\nRunning Random Forest on Dataset with Top Features...\\n\")\n\nbest_n_trees_top = None\nbest_accuracy_top = 0\nbest_y_true_top = None\nbest_y_pred_top = None\n\nfor n_trees in tree_values:\n    pass # Replace this with your implementation\n","metadata":{"execution":{"iopub.execute_input":"2025-03-17T00:04:41.409574Z","iopub.status.busy":"2025-03-17T00:04:41.409270Z","iopub.status.idle":"2025-03-17T00:29:22.455070Z","shell.execute_reply":"2025-03-17T00:29:22.453940Z","shell.execute_reply.started":"2025-03-17T00:04:41.409552Z"}},"outputs":[{"name":"stdout","output_type":"stream","text":["\n","Running Random Forest on Dataset with Top Features...\n","\n"]}],"execution_count":12},{"id":"1d4aba69-3151-44e5-a6ba-8f8416e5ae31","cell_type":"markdown","source":"# **Effect of n_trees on Model Performance (Top Features)**\n## **Overview**\nThis section visualizes how the number of trees (`n_trees`) in a **Random Forest** affects model performance metrics when using only the **top 5 most important features**.\n\n### **Key Metrics:**\n- **Accuracy**: Measures overall correctness of predictions.\n- **Precision**: Evaluates the proportion of true positive predictions.\n- **F1 Score**: Balances precision and recall for better classification insight.\n\n## **Plot Description**\n- We generate three subplots in a single row to compare the effect of `n_trees` on different metrics.\n- Each plot represents:\n  1. **Mean Accuracy vs. Number of Trees**\n  2. **Precision vs. Number of Trees**\n  3. **F1 Score vs. Number of Trees** ","metadata":{}},{"id":"308aca91-8d66-460b-b31a-c45125a2bc1c","cell_type":"code","source":"","metadata":{"execution":{"iopub.execute_input":"2025-03-17T00:30:33.112422Z","iopub.status.busy":"2025-03-17T00:30:33.111991Z","iopub.status.idle":"2025-03-17T00:30:33.863875Z","shell.execute_reply":"2025-03-17T00:30:33.862623Z","shell.execute_reply.started":"2025-03-17T00:30:33.112388Z"}},"outputs":[],"execution_count":null},{"id":"90b23cde-7c5c-44d8-acbc-3028a3ede7a7","cell_type":"markdown","source":"# **Confusion Matrix for Best Random Forest Model (Top Features)**\n## **Overview**\nThis section visualizes the **confusion matrix** for the best-performing Random Forest model using only the **top 5 most important features**.\n\n### **Implementation Details**\n- Computes the confusion matrix using `confusion_matrix(y_true, y_pred)`.\n- Uses `sns.heatmap()` to plot the matrix with numerical annotations.\n","metadata":{}},{"id":"6ec89e26-774a-49f6-9bf7-23c79dae4e3b","cell_type":"code","source":"","metadata":{"execution":{"iopub.execute_input":"2025-03-17T00:30:44.432872Z","iopub.status.busy":"2025-03-17T00:30:44.432471Z","iopub.status.idle":"2025-03-17T00:30:44.656964Z","shell.execute_reply":"2025-03-17T00:30:44.656133Z","shell.execute_reply.started":"2025-03-17T00:30:44.432843Z"}},"outputs":[],"execution_count":null},{"id":"c6ae0786-8dbf-4824-b3e6-906e66f43463","cell_type":"markdown","source":"# Accuracy Comparison: All Features vs. Top Features\n\n## Objective:\nCompare the accuracy of the Random Forest model using all features versus only the top selected features.\n\n## Steps:\n\n1. **Set up the plot** with an appropriate figure size.\n2. **Plot accuracy for all features** using a line graph with markers.\n3. **Plot accuracy for top features** using a different color and lifestyle.\n4. **Label the axes** for clarity.\n5. **Add a title** to describe the comparison.\n6. **Include a grid and legend** for better readability.\n7. **Display the plot** to visualize the accuracy trends.","metadata":{}},{"id":"b3ce74d1-20af-449e-861d-5b6c78fbe6b3","cell_type":"code","source":"\n","metadata":{"execution":{"iopub.execute_input":"2025-03-17T00:30:49.167834Z","iopub.status.busy":"2025-03-17T00:30:49.167506Z","iopub.status.idle":"2025-03-17T00:30:49.416600Z","shell.execute_reply":"2025-03-17T00:30:49.415595Z","shell.execute_reply.started":"2025-03-17T00:30:49.167810Z"}},"outputs":[],"execution_count":null},{"id":"68e02ea3-1a55-4e99-80ae-37d054e64f8e","cell_type":"markdown","source":"\n\n\n\nQ1. Comment on the accuracy trends for both models.\n\n\n\n\n","metadata":{}},{"id":"7d2be93c-d272-419d-9b16-a276c815e6c6","cell_type":"markdown","source":"Q2. Compare their performance, particularly when the number of trees is 1. Provide appropriate explanations for the observed trends.\n\n","metadata":{}},{"id":"85ed596f-75e9-4664-ae7c-01f33e79488a","cell_type":"markdown","source":"### 🌟 You're Halfway There! Keep Going! 🚀\nYou've implemented Random Forest from scratch and gained valuable insights. Now, let's leverage `sklearn` for further exploration!","metadata":{}},{"id":"7d19810d-f3f4-47a1-93a8-a8e6cc3efe28","cell_type":"markdown","source":"# Part 2.2 : Random Forest classification using sklearn library (30 marks)\n\nYou are <span style=\"color: red;\">not allowed</span> to use scikit-learn or any other machine learning toolkit for this part. You have to implement your own random forest classifier from scratch.\n\n## **Importing Libraries**\n\nAll of the necessary libraries for this part have been imported for you below. You may not use any other library apart from standard Python librares.\n","metadata":{}},{"id":"0d5f36c7-2e32-45b9-b2cc-895b904beb9c","cell_type":"code","source":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.tree import plot_tree\n\n","metadata":{"execution":{"iopub.execute_input":"2025-03-17T00:44:01.601213Z","iopub.status.busy":"2025-03-17T00:44:01.600842Z","iopub.status.idle":"2025-03-17T00:44:01.605123Z","shell.execute_reply":"2025-03-17T00:44:01.604214Z","shell.execute_reply.started":"2025-03-17T00:44:01.601185Z"}},"outputs":[],"execution_count":25},{"id":"49513d4e-d26c-48d0-8889-5907b2a51bf9","cell_type":"markdown","source":"# Evaluating Random Forest with Different Tree Counts\n\n## Objective:\nAssess the performance of a Random Forest model using different numbers of trees (`n_trees`) and k-fold cross-validation.\n\n## Steps:\n\n1. **Initialize lists** to store accuracy, precision, and F1 scores.\n2. **Define cross-validation strategy** using `StratifiedKFold` to ensure balanced splits.\n3. **Loop through different tree counts (`n_trees`)** and:\n   - Train the sklearn Random Forest model with the specified number of trees.\n   - Perform k-fold cross-validation.\n   - Calculate accuracy, precision, and F1 scores.\n   - Store the results for comparison.\n4. **Identify the best-performing model** based on accuracy.\n5. **Return the evaluation metrics** for further analysis.\n\n## Expected Outcome:\nA summary of accuracy, precision, and F1 score for each `n_trees` value, along with the best-performing tree count.\n","metadata":{}},{"id":"a5c112b2-c042-4d59-a393-365d0bdb0d72","cell_type":"code","source":"def evaluate_random_forest(X, y, n_trees_values, n_folds=5):\n    \"\"\"\n    Evaluates a Random Forest model using Stratified K-Fold cross-validation.\n\n    Parameters:\n    - X (pd.DataFrame): Feature matrix.\n    - y (pd.Series): Target labels.\n    - n_trees_values (list): Different values of 'n_trees' to evaluate.\n    - n_folds (int, optional): Number of folds for cross-validation (default is 5).\n\n    Returns:\n    - accuracies (list): Mean accuracy for each 'n_trees' value.\n    - precisions (list): Precision scores for each 'n_trees' value.\n    - f1_scores (list): F1 scores for each 'n_trees' value.\n    - best_n_trees (int): The value of 'n_trees' that gave the highest accuracy.\n    - best_y_true (list): True labels corresponding to the best model.\n    - best_y_pred (list): Predicted labels corresponding to the best model.\n    \"\"\"\n    accuracies = []\n    precisions = []\n    f1_scores = []\n    \n    best_n_trees = None\n    best_accuracy = 0\n    best_y_true = None\n    best_y_pred = None\n\n    skf = StratifiedKFold(n_splits=n_folds, shuffle=True, random_state=42)\n\n    for n_trees in n_trees_values:\n        pass # Replace this with your implementation\n\n","metadata":{"execution":{"iopub.execute_input":"2025-03-17T00:44:05.109170Z","iopub.status.busy":"2025-03-17T00:44:05.108826Z","iopub.status.idle":"2025-03-17T00:44:05.117420Z","shell.execute_reply":"2025-03-17T00:44:05.116470Z","shell.execute_reply.started":"2025-03-17T00:44:05.109143Z"}},"outputs":[],"execution_count":13},{"id":"b09d73f5-1d55-41d8-92ef-0984b9987b15","cell_type":"markdown","source":"# Evaluating Random Forest on Full Dataset\n\n## Objective:\nAnalyze the effect of the number of trees (`n_trees`) in a Random Forest model on classification accuracy.\n\n## Steps:\n\n1. **Extract Features and Labels**  \n   - `X`: All columns except the last (features).  \n   - `y`: The last column (target variable).  \n\n2. **Define Tree Values**  \n   - A list of different tree counts to test in the model.\n\n3. **Run Random Forest Evaluation**  \n   - Call `evaluate_random_forest(X, y, tree_values)`.  \n   - Collect accuracy, precision, and F1 scores for each `n_trees`.\n\n4. **Plot Accuracy vs. Number of Trees**  \n   - Use `matplotlib` to visualize the effect of `n_trees` on accuracy.  \n   - The plot will show how accuracy changes with different tree counts.\n\n## Expected Outcome:\nA graph illustrating the impact of `n_trees` on model accuracy, helping to determine the optimal number of trees.\n","metadata":{}},{"id":"c53f99c3-9b21-4f27-abb0-c8b07351f71b","cell_type":"code","source":"X = None # use df.iloc[:, :-1] \ny = None # use df.iloc[:, -1]  \n\ntree_values = [1, 5, 10, 15, 20]\n\nprint(\"\\nRunning Random Forest on Full Dataset...\\n\")\n\n","metadata":{"execution":{"iopub.execute_input":"2025-03-17T00:44:44.665954Z","iopub.status.busy":"2025-03-17T00:44:44.665630Z","iopub.status.idle":"2025-03-17T00:44:45.648880Z","shell.execute_reply":"2025-03-17T00:44:45.647721Z","shell.execute_reply.started":"2025-03-17T00:44:44.665930Z"}},"outputs":[{"name":"stdout","output_type":"stream","text":["\n","Running Random Forest on Full Dataset...\n","\n"]}],"execution_count":15},{"id":"5c78c67a-19c5-41c2-a1e4-2abde8f8b945","cell_type":"markdown","source":"## Feature Importance and Decision Tree Visualization\n\n### 1. Train a Random Forest Model\n- A `RandomForestClassifier` is trained with `n_estimators=50` and `max_depth=10` on the dataset.\n- The model learns feature importances based on how much they contribute to decision-making.\n\n### 2. Identify Top 5 Features\n- Extract feature importances from the trained model.\n- Sort them in descending order and select the top 5 most important features.\n- Display the selected features.\n\n### 3. Visualize a Single Decision Tree\n- Extract one decision tree from the trained random forest using rf_importance.estimators_[0]\n- Use `plot_tree()` to visualize its structure.\n- Label nodes using feature names and class labels.\n\n### 4. Display the Decision Tree\n- Plot the extracted tree with color-coded nodes.\n- The title of the plot is set to \"Visualization of a Single Decision Tree from Random Forest.\"\n","metadata":{}},{"id":"e7aad06f-0f3e-4c1a-a4ce-bd93cb8ff7ca","cell_type":"code","source":"\nrf_importance = None # Replace this with your implementation\n\n\ntop_features = None # Replace this with your implementation\n\n# print(\"Top 5 Features:\", top_features)  #uncomment after implementation\n\nX_top = None # Replace this with your implementation\nselected_tree = None # use rf_importance.estimators_[0]  \n","metadata":{"execution":{"iopub.execute_input":"2025-03-17T00:54:18.251523Z","iopub.status.busy":"2025-03-17T00:54:18.251147Z","iopub.status.idle":"2025-03-17T00:54:21.429812Z","shell.execute_reply":"2025-03-17T00:54:21.428532Z","shell.execute_reply.started":"2025-03-17T00:54:18.251494Z"}},"outputs":[],"execution_count":null},{"id":"a75fc06e-9c5e-4d5b-a9b9-e53cd18c08e3","cell_type":"markdown","source":"## Evaluating Random Forest on Top 5 Features\n\n### 1. Train and Evaluate the Model\n- The `evaluate_random_forest()` function is used to train a `RandomForestClassifier` on only the top 5 most important features.\n- Performance metrics such as accuracy, precision, and F1-score are recorded for different values of `n_trees`.\n\n### 2. Plot Accuracy vs. Number of Trees\n- A line plot is created to visualize the effect of `n_trees` on model accuracy.\n- The x-axis represents the number of trees in the forest.\n- The y-axis represents the mean accuracy percentage.\n- The plot uses green markers (`'o'`) and a solid line (`'-'`) to indicate accuracy when using only the top 5 features.\n\n### 3. Display the Results\n- The grid is enabled for better readability.\n- A legend is added to differentiate accuracy trends.\n- The title of the plot is set to \"Effect of n_trees on Accuracy (Top 5 Features).\"\n","metadata":{}},{"id":"e4f1abe9-8265-4d92-b823-187ddd966e63","cell_type":"code","source":"print(\"\\nRunning Random Forest on Top 5 Features...\\n\")\n\n","metadata":{"execution":{"iopub.execute_input":"2025-03-17T00:49:18.656812Z","iopub.status.busy":"2025-03-17T00:49:18.656404Z","iopub.status.idle":"2025-03-17T00:49:19.609443Z","shell.execute_reply":"2025-03-17T00:49:19.608474Z","shell.execute_reply.started":"2025-03-17T00:49:18.656785Z"}},"outputs":[{"name":"stdout","output_type":"stream","text":["\n","Running Random Forest on Top 5 Features...\n","\n"]}],"execution_count":17},{"id":"dd6388fd-faf3-4e0e-96e3-fb29d0110a0b","cell_type":"markdown","source":"## Confusion Matrix Analysis\n\n### 1. Compute Confusion Matrices\n- The confusion matrices for both the full dataset and the top 5 feature dataset are generated using `confusion_matrix()`.\n- `best_y_true` and `best_y_pred` are used for the full dataset.\n- `best_y_true_top` and `best_y_pred_top` are used for the top 5 feature dataset.\n\n### 2. Visualizing Confusion Matrices\n- The first heatmap represents the confusion matrix for the full dataset.\n- The second heatmap represents the confusion matrix for the top 5 features dataset.\n\n\n### 3. Interpretation\n- Higher diagonal values indicate better classification performance.\n- Off-diagonal values represent misclassifications.\n- Comparing both confusion matrices helps assess if using only the top 5 features impacts model performance.\n","metadata":{}},{"id":"276120d6-3e5e-4f54-b171-8b4c0472b36c","cell_type":"code","source":"\n","metadata":{"execution":{"iopub.execute_input":"2025-03-17T00:49:43.788142Z","iopub.status.busy":"2025-03-17T00:49:43.787744Z","iopub.status.idle":"2025-03-17T00:49:44.331936Z","shell.execute_reply":"2025-03-17T00:49:44.330872Z","shell.execute_reply.started":"2025-03-17T00:49:43.788110Z"}},"outputs":[],"execution_count":null},{"id":"aa2bd7e8-61f0-462f-8a75-20f15ac1905b","cell_type":"markdown","source":"\n\nQ1: How does the custom Random Forest implementation compare to the Scikit-learn Random Forest in terms of accuracy and performance?\n\n\nAnswer:","metadata":{}},{"id":"297718a7-52a9-4711-87ae-fd5e92abde72","cell_type":"markdown","source":"### 🎉 Well Done! 🎉\nYou've successfully built, evaluated, and visualized a Random Forest model. Proud of you, keep up the great work!","metadata":{}}]}